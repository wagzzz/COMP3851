{"version":3,"sources":["../../../src/multi-select/dropdown.tsx"],"names":["React","useEffect","useRef","useState","useDidUpdateEffect","useKey","useMultiSelect","KEY","SelectPanel","Cross","Arrow","DropdownHeader","Loading","Dropdown","t","onMenuToggle","ArrowRenderer","shouldToggleOnHover","isLoading","disabled","onChange","labelledBy","value","isOpen","defaultIsOpen","ClearSelectedIcon","isInternalExpand","setIsInternalExpand","expanded","setExpanded","hasFocus","setHasFocus","FinalArrow","wrapper","undefined","handleKeyDown","e","includes","target","type","SPACE","ENTER","code","ESCAPE","current","focus","preventDefault","ARROW_DOWN","handleHover","iexpanded","handleFocus","handleBlur","currentTarget","contains","relatedTarget","handleMouseEnter","handleMouseLeave","toggleExpanded","handleClearSelected","stopPropagation","length"],"mappings":"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","sourcesContent":["/**\n * A generic dropdown component.  It takes the children of the component\n * and hosts it in the component.  When the component is selected, it\n * drops-down the contentComponent and applies the contentProps.\n */\nimport React, { useEffect, useRef, useState } from \"react\";\n\nimport { useDidUpdateEffect } from \"../hooks/use-did-update-effect\";\nimport { useKey } from \"../hooks/use-key\";\nimport { useMultiSelect } from \"../hooks/use-multi-select\";\nimport { KEY } from \"../lib/constants\";\nimport SelectPanel from \"../select-panel\";\nimport { Cross } from \"../select-panel/cross\";\nimport { Arrow } from \"./arrow\";\nimport { DropdownHeader } from \"./header\";\nimport { Loading } from \"./loading\";\n\nconst Dropdown = () => {\n  const {\n    t,\n    onMenuToggle,\n    ArrowRenderer,\n    shouldToggleOnHover,\n    isLoading,\n    disabled,\n    onChange,\n    labelledBy,\n    value,\n    isOpen,\n    defaultIsOpen,\n    ClearSelectedIcon,\n  } = useMultiSelect();\n\n  const [isInternalExpand, setIsInternalExpand] = useState(true);\n  const [expanded, setExpanded] = useState(defaultIsOpen);\n  const [hasFocus, setHasFocus] = useState(false);\n  const FinalArrow = ArrowRenderer || Arrow;\n\n  const wrapper: any = useRef();\n\n  useDidUpdateEffect(() => {\n    onMenuToggle && onMenuToggle(expanded);\n  }, [expanded]);\n\n  useEffect(() => {\n    if (defaultIsOpen === undefined && typeof isOpen === \"boolean\") {\n      setIsInternalExpand(false);\n      setExpanded(isOpen);\n    }\n  }, [isOpen]);\n\n  const handleKeyDown = (e) => {\n    // allows space and enter when focused on input/button\n    if (\n      [\"text\", \"button\"].includes(e.target.type) &&\n      [KEY.SPACE, KEY.ENTER].includes(e.code)\n    ) {\n      return;\n    }\n\n    if (isInternalExpand) {\n      if (e.code === KEY.ESCAPE) {\n        setExpanded(false);\n        wrapper?.current?.focus();\n      } else {\n        setExpanded(true);\n      }\n    }\n    e.preventDefault();\n  };\n\n  useKey([KEY.ENTER, KEY.ARROW_DOWN, KEY.SPACE, KEY.ESCAPE], handleKeyDown, {\n    target: wrapper,\n  });\n\n  const handleHover = (iexpanded: boolean) => {\n    isInternalExpand && shouldToggleOnHover && setExpanded(iexpanded);\n  };\n\n  const handleFocus = () => !hasFocus && setHasFocus(true);\n\n  const handleBlur = (e) => {\n    if (!e.currentTarget.contains(e.relatedTarget) && isInternalExpand) {\n      setHasFocus(false);\n      setExpanded(false);\n    }\n  };\n\n  const handleMouseEnter = () => handleHover(true);\n\n  const handleMouseLeave = () => handleHover(false);\n\n  const toggleExpanded = () => {\n    isInternalExpand && setExpanded(isLoading || disabled ? false : !expanded);\n  };\n\n  const handleClearSelected = (e) => {\n    e.stopPropagation();\n    onChange([]);\n    isInternalExpand && setExpanded(false);\n  };\n\n  return (\n    <div\n      tabIndex={0}\n      className=\"dropdown-container\"\n      aria-labelledby={labelledBy}\n      aria-expanded={expanded}\n      aria-readonly={true}\n      aria-disabled={disabled}\n      ref={wrapper}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      <div className=\"dropdown-heading\" onClick={toggleExpanded}>\n        <div className=\"dropdown-heading-value\">\n          <DropdownHeader />\n        </div>\n        {isLoading && <Loading />}\n        {value.length > 0 && (\n          <button\n            type=\"button\"\n            className=\"clear-selected-button\"\n            onClick={handleClearSelected}\n            disabled={disabled}\n            aria-label={t(\"clearSelected\")}\n          >\n            {ClearSelectedIcon || <Cross />}\n          </button>\n        )}\n        <FinalArrow expanded={expanded} />\n      </div>\n      {expanded && (\n        <div className=\"dropdown-content\">\n          <div className=\"panel-content\">\n            <SelectPanel />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dropdown;\n"],"file":"dropdown.js"}