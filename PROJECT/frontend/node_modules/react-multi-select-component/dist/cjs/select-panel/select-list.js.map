{"version":3,"sources":["../../../src/select-panel/select-list.tsx"],"names":["SelectList","options","onClick","skipIndex","disabled","value","onChange","ItemRenderer","handleSelectionChanged","option","checked","filter","o","map","i","tabIndex","key","c","find","s","e"],"mappings":";;;;;AAGA;;AAEA;;AAEA;;;;AAPA;AACA;AACA;AAaA,MAAMA,UAAU,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,OAAX;AAAoBC,EAAAA;AAApB,CAAD,KAAuD;AACxE,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,QAAnB;AAA6BC,IAAAA;AAA7B,MAA8C,qCAApD;;AAEA,QAAMC,sBAAsB,GAAG,CAACC,MAAD,EAAiBC,OAAjB,KAAsC;AACnE,QAAIN,QAAJ,EAAc;AAEdE,IAAAA,QAAQ,CACNI,OAAO,GACH,CAAC,GAAGL,KAAJ,EAAWI,MAAX,CADG,GAEHJ,KAAK,CAACM,MAAN,CAAcC,CAAD,IAAYA,CAAC,CAACP,KAAF,KAAYI,MAAM,CAACJ,KAA5C,CAHE,CAAR;AAKD,GARD;;AAUA,sBACE,4DACGJ,OAAO,CAACY,GAAR,CAAY,CAACD,CAAD,EAASE,CAAT,KAAe;AAC1B,UAAMC,QAAQ,GAAGD,CAAC,GAAGX,SAArB;AAEA,wBACE;AAAI,MAAA,GAAG,EAAE,CAAAS,CAAC,QAAD,YAAAA,CAAC,CAAEI,GAAH,KAAUF;AAAnB,oBACE,6BAAC,mBAAD;AACE,MAAA,QAAQ,EAAEC,QADZ;AAEE,MAAA,MAAM,EAAEH,CAFV;AAGE,MAAA,kBAAkB,EAAGK,CAAD,IAAOT,sBAAsB,CAACI,CAAD,EAAIK,CAAJ,CAHnD;AAIE,MAAA,OAAO,EAAE,CAAC,CAACZ,KAAK,CAACa,IAAN,CAAYC,CAAD,IAAOA,CAAC,CAACd,KAAF,KAAYO,CAAC,CAACP,KAAhC,CAJb;AAKE,MAAA,OAAO,EAAGe,CAAD,IAAOlB,OAAO,CAACkB,CAAD,EAAIL,QAAJ,CALzB;AAME,MAAA,YAAY,EAAER,YANhB;AAOE,MAAA,QAAQ,EAAEK,CAAC,CAACR,QAAF,IAAcA;AAP1B,MADF,CADF;AAaD,GAhBA,CADH,CADF;AAqBD,CAlCD;;eAoCeJ,U","sourcesContent":["/**\n * This component represents an unadorned list of SelectItem (s).\n */\nimport React from \"react\";\n\nimport { useMultiSelect } from \"../hooks/use-multi-select\";\nimport { Option } from \"../lib/interfaces\";\nimport SelectItem from \"./select-item\";\n\ninterface ISelectListProps {\n  options: Option[];\n  onClick;\n  skipIndex: number;\n}\n\nconst SelectList = ({ options, onClick, skipIndex }: ISelectListProps) => {\n  const { disabled, value, onChange, ItemRenderer } = useMultiSelect();\n\n  const handleSelectionChanged = (option: Option, checked: boolean) => {\n    if (disabled) return;\n\n    onChange(\n      checked\n        ? [...value, option]\n        : value.filter((o: any) => o.value !== option.value)\n    );\n  };\n\n  return (\n    <>\n      {options.map((o: any, i) => {\n        const tabIndex = i + skipIndex;\n\n        return (\n          <li key={o?.key || i}>\n            <SelectItem\n              tabIndex={tabIndex}\n              option={o}\n              onSelectionChanged={(c) => handleSelectionChanged(o, c)}\n              checked={!!value.find((s) => s.value === o.value)}\n              onClick={(e) => onClick(e, tabIndex)}\n              itemRenderer={ItemRenderer}\n              disabled={o.disabled || disabled}\n            />\n          </li>\n        );\n      })}\n    </>\n  );\n};\n\nexport default SelectList;\n"],"file":"select-list.js"}