"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _useKey = require("../hooks/use-key");

var _constants = require("../lib/constants");

var _defaultItem = _interopRequireDefault(require("./default-item"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 * This component represents an individual item in the multi-select drop-down
 */
const SelectItem = ({
  itemRenderer: ItemRenderer = _defaultItem.default,
  option,
  checked,
  tabIndex,
  disabled,
  onSelectionChanged,
  onClick
}) => {
  const itemRef = (0, _react.useRef)();

  const onOptionCheck = e => {
    toggleChecked();
    e.preventDefault();
  };

  const toggleChecked = () => {
    if (!disabled) {
      onSelectionChanged(!checked);
    }
  };

  const handleClick = e => {
    toggleChecked();
    onClick(e);
  };

  (0, _useKey.useKey)([_constants.KEY.ENTER, _constants.KEY.SPACE], onOptionCheck, {
    target: itemRef
  });
  return /*#__PURE__*/_react.default.createElement("label", {
    className: `select-item ${checked && "selected"}`,
    role: "option",
    "aria-selected": checked,
    tabIndex: tabIndex,
    ref: itemRef
  }, /*#__PURE__*/_react.default.createElement(ItemRenderer, {
    option: option,
    checked: checked,
    onClick: handleClick,
    disabled: disabled
  }));
};

var _default = SelectItem;
exports.default = _default;
//# sourceMappingURL=select-item.js.map