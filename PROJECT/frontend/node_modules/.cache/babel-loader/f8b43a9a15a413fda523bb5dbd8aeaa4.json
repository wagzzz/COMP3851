{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\itswa\\\\Desktop\\\\Complete\\\\frontend\\\\src\\\\components\\\\User\\\\UserDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logout } from '../../store/actions/authActions';\nimport { useSelector } from 'react-redux';\nimport { Button, Container, Navbar, Row, Col } from 'react-bootstrap';\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport DegreePlanList from \"./DegreePlan/DegreePlanList\";\nimport DegreePlanCreate from \"./DegreePlan/DegreePlanCreate\";\nimport axios from \"axios\";\nimport { config } from \"../../constants\";\nimport { onToast } from \"../../utils/toastUtil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserDashboard = () => {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const signout = () => {\n    dispatch(logout());\n  };\n\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const [degreePlans, setDegreePlans] = useState([]);\n  useEffect(() => {\n    // here goes the data fetching\n    const fetchDegreePlanList = async () => {\n      try {\n        let res = await axios.get('/user/degreePlans/' + user.userId, config);\n        setDegreePlans(await res.data);\n      } catch (err) {\n        onToast('Server Error!', 'error');\n      }\n    };\n\n    fetchDegreePlanList();\n  }, []);\n\n  const onAddDegreePlan = degreePlan => {\n    const _degreePlans = degreePlans.slice();\n\n    _degreePlans.push(degreePlan);\n\n    setDegreePlans(_degreePlans);\n  };\n\n  const onDeleteDegreePlan = degreePlan => {\n    let _degreePlans = [];\n    degreePlans.forEach(dp => {\n      if (dp.id !== degreePlan.id) _degreePlans.push(dp);\n    });\n    setDegreePlans(_degreePlans);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      bg: \"dark\",\n      variant: \"dark\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(LinkContainer, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Navbar.Brand, {\n            className: \"pull-left\",\n            children: \"Program Advisory Tool\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Text, {\n          children: [\"Signed in as: \", /*#__PURE__*/_jsxDEV(\"a\", {\n            children: [user.firstName, \" \", user.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: signout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"bigHeader\",\n        children: \" User Dashboard \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"my-5\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          lg: 6,\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(DegreePlanCreate, {\n            user: user,\n            onAddDegreePlan: onAddDegreePlan\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: 6,\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(DegreePlanList, {\n            degreePlans: degreePlans,\n            user: user,\n            onDeleteDegreePlan: onDeleteDegreePlan\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserDashboard, \"5wXNunwz7YAt8mPlXeBusFt5s9k=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = UserDashboard;\nexport default UserDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"sources":["C:/Users/itswa/Desktop/Complete/frontend/src/components/User/UserDashboard.js"],"names":["React","useEffect","useState","useDispatch","logout","useSelector","Button","Container","Navbar","Row","Col","LinkContainer","DegreePlanList","DegreePlanCreate","axios","config","onToast","UserDashboard","dispatch","signout","user","state","auth","degreePlans","setDegreePlans","fetchDegreePlanList","res","get","userId","data","err","onAddDegreePlan","degreePlan","_degreePlans","slice","push","onDeleteDegreePlan","forEach","dp","id","firstName","lastName"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logout } from '../../store/actions/authActions';\nimport { useSelector } from 'react-redux';\nimport { Button, Container, Navbar, Row, Col } from 'react-bootstrap';\nimport { LinkContainer} from \"react-router-bootstrap\";\nimport DegreePlanList from \"./DegreePlan/DegreePlanList\";\nimport DegreePlanCreate from \"./DegreePlan/DegreePlanCreate\";\nimport axios from \"axios\";\nimport {config} from \"../../constants\";\nimport {onToast} from \"../../utils/toastUtil\";\n\n\nconst UserDashboard = () => {\n    const dispatch = useDispatch();\n\n    const signout = () => {\n        dispatch(logout())\n    }\n\n    const { user } = useSelector((state) => state.auth);\n\n    const [degreePlans, setDegreePlans] = useState([])\n\n    useEffect(() => {\n        // here goes the data fetching\n        const fetchDegreePlanList = async () => {\n            try {\n                let res = await axios.get('/user/degreePlans/' + user.userId, config)\n                setDegreePlans(await res.data)\n            } catch (err) {\n                onToast('Server Error!', 'error');\n            }\n\n        }\n        fetchDegreePlanList()\n    }, [])\n\n    const onAddDegreePlan = (degreePlan) => {\n        const _degreePlans = degreePlans.slice()\n        _degreePlans.push(degreePlan)\n        setDegreePlans(_degreePlans)\n    }\n\n    const onDeleteDegreePlan = (degreePlan) => {\n        let _degreePlans = []\n        degreePlans.forEach((dp) => {\n            if(dp.id !== degreePlan.id) _degreePlans.push(dp)\n        })\n        setDegreePlans(_degreePlans)\n    }\n\n    return (\n        <div>\n            \n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Container>\n                    <LinkContainer to=\"/\">\n                        <Navbar.Brand className=\"pull-left\">Program Advisory Tool</Navbar.Brand>\n                    </LinkContainer>\n                    <Navbar.Text>\n                        Signed in as: <a>{user.firstName} {user.lastName}</a>\n                    </Navbar.Text>\n                    <Button onClick={signout}>Logout</Button>\n                </Container>\n            </Navbar>\n\n            <Container>\n                <h1 className=\"bigHeader\"> User Dashboard </h1>\n                <Row className=\"my-5\">\n                    <Col lg={6} md={12}>\n                        <DegreePlanCreate\n                            user={user}\n                            onAddDegreePlan={onAddDegreePlan}\n                        />\n                    </Col>\n                    <Col lg={6} md={12}>\n                        <DegreePlanList\n                            degreePlans={degreePlans}\n                            user={user}\n                            onDeleteDegreePlan={onDeleteDegreePlan}\n                        />\n                    </Col>\n                </Row>\n            </Container>\n\n        </div>\n\n    )\n}\n\nexport default UserDashboard;\n"]},"metadata":{},"sourceType":"module"}