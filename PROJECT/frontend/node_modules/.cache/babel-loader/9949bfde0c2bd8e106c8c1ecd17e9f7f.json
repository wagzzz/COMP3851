{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\itswa\\\\Desktop\\\\Complete\\\\frontend\\\\src\\\\routes\\\\AdminRoute.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AdminRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    authenticated,\n    user\n  } = useSelector(state => state.auth);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: props => authenticated && (user === null || user === void 0 ? void 0 : user.role) === \"admin\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Component, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 17\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AdminRoute, \"Rscxai0q5AvJPYHsdtO+kMUTVmo=\", false, function () {\n  return [useSelector];\n});\n\n_c = AdminRoute;\nexport default AdminRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminRoute\");","map":{"version":3,"sources":["C:/Users/itswa/Desktop/Complete/frontend/src/routes/AdminRoute.js"],"names":["React","useSelector","Route","Redirect","AdminRoute","component","Component","rest","authenticated","user","state","auth","props","role"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAAA;;AACtD,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAA0BR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA3C;AAEA,sBACI;AAAA,2BACI,QAAC,KAAD,OAAWJ,IAAX;AAAiB,MAAA,MAAM,EAAEK,KAAK,IAAIJ,aAAa,IAAI,CAAAC,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEI,IAAN,MAAe,OAAhC,gBAClC;AAAA,+BACI,QAAC,SAAD,OAAeD;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ,uBADkC,gBAI9B,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAZD;;GAAMR,U;UAC8BH,W;;;KAD9BG,U;AAcN,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst AdminRoute = ({ component: Component, ...rest }) => {\n    const { authenticated, user } = useSelector((state) => state.auth);\n\n    return (\n        <div>\n            <Route {...rest} render={props => authenticated && user?.role === \"admin\" ? \n            <>\n                <Component {...props} /> \n            </>:\n                <Redirect to=\"/login\" />} />\n        </div>\n    );\n}\n\nexport default AdminRoute;"]},"metadata":{},"sourceType":"module"}