{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\itswa\\\\Desktop\\\\Complete\\\\frontend\\\\src\\\\components\\\\Admin\\\\Degree\\\\DegreeModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Modal, Form, Col, Row } from 'react-bootstrap';\nimport axios from \"axios\";\nimport { config } from \"../../../constants\";\nimport { isNull } from \"../../../utils/stringUtil\";\nimport { onToast } from \"../../../utils/toastUtil\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DegreeModal = props => {\n  _s();\n\n  const initialDegree = props.degree;\n  const [modalDegree, setModalDegree] = useState(initialDegree);\n  const courseOptions = props.degreedetail.courses === undefined ? [] : props.degreedetail.courses.map(course => {\n    return {\n      /*label: course.code + '/' + course.name,*/\n      label: course.code,\n      value: course.courseId\n    };\n  });\n  const [coreSelected, setCoreSelected] = useState([]);\n  const [directedSelected, setDirectedSelected] = useState([]);\n  useEffect(() => {\n    setModalDegree(initialDegree);\n  }, [initialDegree]);\n  useEffect(() => {\n    const _initCoreSelected = props.degreedetail.restraints === undefined ? [] : props.degreedetail.restraints.filter(restraint => {\n      return restraint.type === \"Core\";\n    }).map(restraint => {\n      return {\n        /*label: restraint.course.code + '/' + restraint.course.name,*/\n        label: restraint.course.code,\n        value: restraint.course.courseId\n      };\n    });\n\n    const _initDirectedSelected = props.degreedetail.restraints === undefined ? [] : props.degreedetail.restraints.filter(restraint => {\n      return restraint.type === \"Directed\";\n    }).map(restraint => {\n      return {\n        /*label: restraint.course.code + '/' + restraint.course.name,*/\n        label: restraint.course.code,\n        value: restraint.course.courseId\n      };\n    });\n\n    setCoreSelected(_initCoreSelected);\n    setDirectedSelected(_initDirectedSelected);\n  }, [props.degreedetail]);\n\n  const onInput = ({\n    target: {\n      value,\n      id\n    }\n  }) => {\n    setModalDegree({ ...modalDegree,\n      [id]: value\n    });\n  };\n\n  const onSubmit = () => {\n    if (isNull(modalDegree)) {\n      onToast('Fill all inputs!', 'warn');\n      return;\n    }\n\n    if (isNull(modalDegree.name)) {\n      onToast('Fill Degree Name!', 'warn');\n      return;\n    }\n\n    if (isNull(modalDegree.major)) {\n      onToast('Fill Degree Major!', 'warn');\n      return;\n    }\n\n    if (isNull(modalDegree.faculty)) {\n      onToast('Fill Degree Faculty!', 'warn');\n      return;\n    }\n\n    if (isNull(modalDegree.numberOfUnits)) {\n      onToast('Check Degree Units!', 'warn');\n      return;\n    }\n\n    let intersection = false;\n    coreSelected.forEach(cOption => {\n      directedSelected.forEach(dOption => {\n        if (cOption.value === dOption.value) intersection = true;\n      });\n    });\n\n    if (intersection) {\n      onToast('There are some duplicated courses!', 'warn');\n      return;\n    }\n\n    modalDegree.restraints = [];\n    coreSelected.forEach(option => {\n      modalDegree.restraints.push({\n        type: \"Core\",\n        course: {\n          courseId: option.value\n        }\n      });\n    });\n    directedSelected.forEach(option => {\n      modalDegree.restraints.push({\n        type: \"Directed\",\n        course: {\n          courseId: option.value\n        }\n      });\n    });\n\n    const submitDegreeData = async () => {\n      let res;\n\n      try {\n        if (initialDegree === null) {\n          res = await axios.post('/admin/degree', JSON.stringify(modalDegree), config);\n          props.onCreateDegree(res.data);\n        } else {\n          res = await axios.put('/admin/degree', JSON.stringify(modalDegree), config);\n          props.onEditDegree(res.data);\n        }\n\n        onToast('Successfully saved!', 'success');\n        props.onHide();\n      } catch (err) {\n        let {\n          status\n        } = err.response;\n\n        if (status === 400) {\n          onToast('Degree name and major duplicated!', 'error');\n          return;\n        }\n\n        onToast('Server error!', 'error');\n      }\n    };\n\n    submitDegreeData();\n  };\n\n  const onModalHide = () => {\n    setModalDegree(initialDegree);\n    props.onHide();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Modal, { ...props,\n      size: \"lg\",\n      \"aria-labelledby\": \"degree-edit-modal\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"degree-edit-modal\",\n          children: initialDegree === null ? 'Create degree' : 'Edit degree'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              md: \"6\",\n              controlId: \"name\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter degree name\",\n                onChange: onInput,\n                value: modalDegree && modalDegree.name ? modalDegree.name : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              md: \"6\",\n              controlId: \"major\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Major\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter degree major\",\n                onChange: onInput,\n                value: modalDegree && modalDegree.major ? modalDegree.major : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              md: \"6\",\n              className: \"mt-3\",\n              controlId: \"faculty\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Faculty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter degree faculty\",\n                onChange: onInput,\n                value: modalDegree && modalDegree.faculty ? modalDegree.faculty : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              md: \"6\",\n              className: \"mt-3\",\n              controlId: \"numberOfUnits\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Number of units\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                \"aria-label\": \"Select number of units\",\n                onChange: onInput,\n                value: modalDegree && modalDegree.numberOfUnits ? modalDegree.numberOfUnits : \"\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  placeholder: \"Select number of units\",\n                  disabled: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"240\",\n                  children: \"240\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"320\",\n                  children: \"320\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              md: \"12\",\n              className: \"mt-3\",\n              controlId: \"core\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Core courses\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MultiSelect, {\n                options: courseOptions,\n                value: coreSelected,\n                onChange: setCoreSelected,\n                labelledBy: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              md: \"12\",\n              className: \"mt-3\",\n              controlId: \"core\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Directed courses\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MultiSelect, {\n                options: courseOptions,\n                value: directedSelected,\n                onChange: setDirectedSelected,\n                labelledBy: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          onClick: onSubmit,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: onModalHide,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DegreeModal, \"Yy6T5Q1SmoLL8mVkZGlcMxIfzSs=\");\n\n_c = DegreeModal;\nexport default DegreeModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"DegreeModal\");","map":{"version":3,"sources":["C:/Users/itswa/Desktop/Complete/frontend/src/components/Admin/Degree/DegreeModal.js"],"names":["React","useState","useEffect","Button","Modal","Form","Col","Row","axios","config","isNull","onToast","MultiSelect","ToastContainer","toast","DegreeModal","props","initialDegree","degree","modalDegree","setModalDegree","courseOptions","degreedetail","courses","undefined","map","course","label","code","value","courseId","coreSelected","setCoreSelected","directedSelected","setDirectedSelected","_initCoreSelected","restraints","filter","restraint","type","_initDirectedSelected","onInput","target","id","onSubmit","name","major","faculty","numberOfUnits","intersection","forEach","cOption","dOption","option","push","submitDegreeData","res","post","JSON","stringify","onCreateDegree","data","put","onEditDegree","onHide","err","status","response","onModalHide"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\r\nimport {Button, Modal, Form, Col, Row} from 'react-bootstrap'\r\nimport axios from \"axios\"\r\nimport {config} from \"../../../constants\"\r\nimport {isNull} from \"../../../utils/stringUtil\"\r\nimport {onToast} from \"../../../utils/toastUtil\"\r\nimport {MultiSelect} from \"react-multi-select-component\"\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst DegreeModal = (props) => {\r\n\r\n    const initialDegree = props.degree\r\n    const [modalDegree, setModalDegree] = useState(initialDegree)\r\n\r\n    const courseOptions = props.degreedetail.courses === undefined ? [] : props.degreedetail.courses.map((course) => {\r\n        return {\r\n            /*label: course.code + '/' + course.name,*/\r\n            label: course.code,\r\n            value: course.courseId\r\n        }\r\n    })\r\n\r\n    const [coreSelected, setCoreSelected] = useState([])\r\n    const [directedSelected, setDirectedSelected] = useState([])\r\n\r\n    useEffect(() => {\r\n        setModalDegree(initialDegree)\r\n    }, [initialDegree])\r\n\r\n    useEffect(() => {\r\n        const _initCoreSelected = props.degreedetail.restraints === undefined ? [] : props.degreedetail.restraints.filter((restraint) => {\r\n            return restraint.type === \"Core\"\r\n        }).map((restraint) => {\r\n            return {\r\n                /*label: restraint.course.code + '/' + restraint.course.name,*/\r\n                label: restraint.course.code,\r\n                value: restraint.course.courseId\r\n            }\r\n        })\r\n        const _initDirectedSelected = props.degreedetail.restraints === undefined ? [] : props.degreedetail.restraints.filter((restraint) => {\r\n            return restraint.type === \"Directed\"\r\n        }).map((restraint) => {\r\n            return {\r\n                /*label: restraint.course.code + '/' + restraint.course.name,*/\r\n                label: restraint.course.code,\r\n                value: restraint.course.courseId\r\n            }\r\n        })\r\n        setCoreSelected(_initCoreSelected)\r\n        setDirectedSelected(_initDirectedSelected)\r\n    }, [props.degreedetail])\r\n\r\n    const onInput = ({target: {value, id}}) => {\r\n        setModalDegree({\r\n            ...modalDegree,\r\n            [id]: value\r\n        })\r\n    }\r\n\r\n    const onSubmit = () => {\r\n\r\n        if (isNull(modalDegree)) {\r\n            onToast('Fill all inputs!', 'warn');\r\n            return;\r\n        }\r\n\r\n        if (isNull(modalDegree.name)) {\r\n            onToast('Fill Degree Name!', 'warn');\r\n            return;\r\n        }\r\n        if (isNull(modalDegree.major)) {\r\n            onToast('Fill Degree Major!', 'warn');\r\n            return;\r\n        }\r\n        if (isNull(modalDegree.faculty)) {\r\n            onToast('Fill Degree Faculty!', 'warn');\r\n            return;\r\n        }\r\n        if (isNull(modalDegree.numberOfUnits)) {\r\n            onToast('Check Degree Units!', 'warn');\r\n            return;\r\n        }\r\n\r\n        let intersection = false;\r\n        coreSelected.forEach((cOption) => {\r\n            directedSelected.forEach((dOption) => {\r\n                if(cOption.value === dOption.value) intersection = true;\r\n            })\r\n        })\r\n        if (intersection) {\r\n            onToast('There are some duplicated courses!', 'warn');\r\n            return;\r\n        }\r\n\r\n        modalDegree.restraints = []\r\n        coreSelected.forEach((option) => {\r\n            modalDegree.restraints.push({\r\n                type: \"Core\",\r\n                course: {courseId: option.value}\r\n            })\r\n        })\r\n\r\n        directedSelected.forEach((option) => {\r\n            modalDegree.restraints.push({\r\n                type: \"Directed\",\r\n                course: {courseId: option.value}\r\n            })\r\n        })\r\n\r\n        const submitDegreeData = async () => {\r\n\r\n            let res;\r\n            try {\r\n                if (initialDegree === null) {\r\n                    res = await axios.post('/admin/degree', JSON.stringify(modalDegree), config)\r\n                    props.onCreateDegree(res.data)\r\n                } else {\r\n                    res = await axios.put('/admin/degree', JSON.stringify(modalDegree), config)\r\n                    props.onEditDegree(res.data)\r\n                }\r\n                onToast('Successfully saved!', 'success');\r\n                props.onHide()\r\n            } catch(err) {\r\n                let { status } = err.response;\r\n                if(status === 400) {\r\n                    onToast('Degree name and major duplicated!', 'error');\r\n                    return;\r\n                }\r\n                onToast('Server error!', 'error');\r\n            }\r\n        }\r\n        submitDegreeData()\r\n    }\r\n\r\n    const onModalHide = () => {\r\n        setModalDegree(initialDegree)\r\n        props.onHide()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"degree-edit-modal\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"degree-edit-modal\">\r\n                        {initialDegree === null ? 'Create degree' : 'Edit degree'}\r\n                    </Modal.Title>\r\n\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Row className=\"mb-3\">\r\n                            <Form.Group as={Col} md=\"6\" controlId=\"name\">\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter degree name\"\r\n                                              onChange={onInput}\r\n                                              value={modalDegree && modalDegree.name ? modalDegree.name : \"\"}/>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} md=\"6\" controlId=\"major\">\r\n                                <Form.Label>Major</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter degree major\"\r\n                                              onChange={onInput}\r\n                                              value={modalDegree && modalDegree.major ? modalDegree.major : \"\"}/>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} md=\"6\" className=\"mt-3\" controlId=\"faculty\">\r\n                                <Form.Label>Faculty</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter degree faculty\"\r\n                                              onChange={onInput}\r\n                                              value={modalDegree && modalDegree.faculty ? modalDegree.faculty : \"\"}/>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} md=\"6\" className=\"mt-3\" controlId=\"numberOfUnits\">\r\n                                <Form.Label>Number of units</Form.Label>\r\n                                <Form.Select aria-label=\"Select number of units\"\r\n                                             onChange={onInput}\r\n                                             value={modalDegree && modalDegree.numberOfUnits ? modalDegree.numberOfUnits : \"\"}>\r\n                                    <option placeholder=\"Select number of units\" disabled></option>\r\n                                    <option value=\"240\">240</option>\r\n                                    <option value=\"320\">320</option>\r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} md=\"12\" className=\"mt-3\" controlId=\"core\">\r\n                                <Form.Label>Core courses</Form.Label>\r\n                                <MultiSelect\r\n                                    options={courseOptions}\r\n                                    value={coreSelected}\r\n                                    onChange={setCoreSelected}\r\n                                    labelledBy=\"Select\"\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} md=\"12\" className=\"mt-3\" controlId=\"core\">\r\n                                <Form.Label>Directed courses</Form.Label>\r\n                                <MultiSelect\r\n                                    options={courseOptions}\r\n                                    value={directedSelected}\r\n                                    onChange={setDirectedSelected}\r\n                                    labelledBy=\"Select\"\r\n                                />\r\n                            </Form.Group>\r\n                        </Row>\r\n\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" type=\"submit\" onClick={onSubmit}>\r\n                        Save\r\n                    </Button>\r\n                    <Button variant=\"secondary\" onClick={onModalHide}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <ToastContainer />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default DegreeModal"]},"metadata":{},"sourceType":"module"}