{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n/**\n * This component represents the entire panel which gets dropped down when the\n * user selects the component.  It encapsulates the search filter, the\n * Select-all item, and the list of options.\n */\n\n\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { useKey } from \"../hooks/use-key\";\nimport { useMultiSelect } from \"../hooks/use-multi-select\";\nimport { KEY } from \"../lib/constants\";\nimport { debounce } from \"../lib/debounce\";\nimport { filterOptions } from \"../lib/fuzzy-match-utils\";\nimport { Cross } from \"./cross\";\nimport SelectItem from \"./select-item\";\nimport SelectList from \"./select-list\";\nvar FocusType;\n\n(function (FocusType) {\n  FocusType[FocusType[\"SEARCH\"] = 0] = \"SEARCH\";\n  FocusType[FocusType[\"NONE\"] = -1] = \"NONE\";\n})(FocusType || (FocusType = {}));\n\nvar SelectPanel = () => {\n  var {\n    t,\n    onChange,\n    options,\n    setOptions,\n    value,\n    filterOptions: customFilterOptions,\n    ItemRenderer,\n    disabled,\n    disableSearch,\n    hasSelectAll,\n    ClearIcon,\n    debounceDuration,\n    isCreatable,\n    onCreateOption\n  } = useMultiSelect();\n  var listRef = useRef();\n  var searchInputRef = useRef();\n  var [searchText, setSearchText] = useState(\"\");\n  var [filteredOptions, setFilteredOptions] = useState(options);\n  var [searchTextForFilter, setSearchTextForFilter] = useState(\"\");\n  var [focusIndex, setFocusIndex] = useState(0);\n  var debouncedSearch = useCallback(debounce(query => setSearchTextForFilter(query), debounceDuration), []);\n  var skipIndex = useMemo(() => {\n    var start = 0;\n    if (!disableSearch) start += 1; // if search is enabled then +1 to skipIndex\n\n    if (hasSelectAll) start += 1; // if select-all is enabled then +1 to skipIndex\n\n    return start;\n  }, [disableSearch, hasSelectAll]);\n  var selectAllOption = {\n    label: searchText ? t(\"selectAllFiltered\") : t(\"selectAll\"),\n    value: \"\"\n  };\n\n  var selectAllValues = checked => {\n    var filteredValues = filteredOptions.filter(o => !o.disabled).map(o => o.value);\n\n    if (checked) {\n      var selectedValues = value.map(o => o.value);\n      var finalSelectedValues = [...selectedValues, ...filteredValues];\n      return options.filter(o => finalSelectedValues.includes(o.value));\n    }\n\n    return value.filter(o => !filteredValues.includes(o.value));\n  };\n\n  var selectAllChanged = checked => {\n    var newOptions = selectAllValues(checked);\n    onChange(newOptions);\n  };\n\n  var handleSearchChange = e => {\n    debouncedSearch(e.target.value);\n    setSearchText(e.target.value);\n    setFocusIndex(FocusType.SEARCH);\n  };\n\n  var handleClear = () => {\n    var _searchInputRef$curre;\n\n    setSearchTextForFilter(\"\");\n    setSearchText(\"\");\n    searchInputRef == null ? void 0 : (_searchInputRef$curre = searchInputRef.current) == null ? void 0 : _searchInputRef$curre.focus();\n  };\n\n  var handleItemClicked = index => setFocusIndex(index); // Arrow Key Navigation\n\n\n  var handleKeyDown = e => {\n    switch (e.code) {\n      case KEY.ARROW_UP:\n        updateFocus(-1);\n        break;\n\n      case KEY.ARROW_DOWN:\n        updateFocus(1);\n        break;\n\n      default:\n        return;\n    }\n\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  useKey([KEY.ARROW_DOWN, KEY.ARROW_UP], handleKeyDown, {\n    target: listRef\n  });\n\n  var handleSearchFocus = () => {\n    setFocusIndex(FocusType.SEARCH);\n  };\n\n  var handleOnCreateOption = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* () {\n      var newOption = {\n        label: searchText,\n        value: searchText,\n        __isNew__: true\n      }; // if custom `onCreateOption` is given then this will call this\n\n      if (onCreateOption) {\n        newOption = yield onCreateOption(searchText);\n      } // adds created value to existing options\n\n\n      setOptions([newOption, ...options]);\n      handleClear();\n      onChange([...value, newOption]);\n    });\n\n    return function handleOnCreateOption() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getFilteredOptions = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      return customFilterOptions ? yield customFilterOptions(options, searchTextForFilter) : filterOptions(options, searchTextForFilter);\n    });\n\n    return function getFilteredOptions() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var updateFocus = offset => {\n    var newFocus = focusIndex + offset;\n    newFocus = Math.max(0, newFocus);\n    newFocus = Math.min(newFocus, options.length + Math.max(skipIndex - 1, 0));\n    setFocusIndex(newFocus);\n  };\n\n  useEffect(() => {\n    var _listRef$current, _listRef$current$quer;\n\n    listRef == null ? void 0 : (_listRef$current = listRef.current) == null ? void 0 : (_listRef$current$quer = _listRef$current.querySelector(\"[tabIndex='\" + focusIndex + \"']\")) == null ? void 0 : _listRef$current$quer.focus();\n  }, [focusIndex]);\n  var [isAllOptionSelected, hasSelectableOptions] = useMemo(() => {\n    var filteredOptionsList = filteredOptions.filter(o => !o.disabled);\n    return [filteredOptionsList.every(o => value.findIndex(v => v.value === o.value) !== -1), filteredOptionsList.length !== 0]; // eslint-disable-next-line\n  }, [filteredOptions, value]);\n  useEffect(() => {\n    getFilteredOptions().then(setFilteredOptions);\n  }, [searchTextForFilter, options]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"select-panel\",\n    role: \"listbox\",\n    ref: listRef\n  }, !disableSearch && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search\"\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: t(\"search\"),\n    type: \"text\",\n    \"aria-describedby\": t(\"search\"),\n    onChange: handleSearchChange,\n    onFocus: handleSearchFocus,\n    value: searchText,\n    ref: searchInputRef,\n    tabIndex: 0\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"search-clear-button\",\n    hidden: !searchText,\n    onClick: handleClear,\n    \"aria-label\": t(\"clearSearch\")\n  }, ClearIcon || /*#__PURE__*/React.createElement(Cross, null))), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"options\"\n  }, hasSelectAll && hasSelectableOptions && /*#__PURE__*/React.createElement(SelectItem, {\n    tabIndex: skipIndex === 1 ? 0 : 1,\n    checked: isAllOptionSelected,\n    option: selectAllOption,\n    onSelectionChanged: selectAllChanged,\n    onClick: () => handleItemClicked(1),\n    itemRenderer: ItemRenderer,\n    disabled: disabled\n  }), filteredOptions.length ? /*#__PURE__*/React.createElement(SelectList, {\n    skipIndex: skipIndex,\n    options: filteredOptions,\n    onClick: (_e, index) => handleItemClicked(index)\n  }) : isCreatable ? /*#__PURE__*/React.createElement(\"li\", {\n    onClick: handleOnCreateOption,\n    className: \"select-item creatable\"\n  }, t(\"create\") + \" \\\"\" + searchText + \"\\\"\") : /*#__PURE__*/React.createElement(\"li\", {\n    className: \"no-options\"\n  }, t(\"noOptions\"))));\n};\n\nexport default SelectPanel;","map":{"version":3,"sources":["../../../src/select-panel/index.tsx"],"names":["FocusType","SelectPanel","filterOptions","onCreateOption","useMultiSelect","listRef","useRef","searchInputRef","useState","debouncedSearch","useCallback","debounce","query","setSearchTextForFilter","skipIndex","useMemo","start","selectAllOption","label","searchText","t","value","selectAllValues","checked","filteredValues","filteredOptions","o","selectedValues","finalSelectedValues","options","selectAllChanged","newOptions","onChange","handleSearchChange","e","setSearchText","setFocusIndex","handleClear","handleItemClicked","index","handleKeyDown","KEY","updateFocus","useKey","target","handleSearchFocus","handleOnCreateOption","newOption","__isNew__","setOptions","getFilteredOptions","customFilterOptions","offset","newFocus","focusIndex","Math","useEffect","filteredOptionsList","v","ClearIcon","hasSelectAll","disabled","isCreatable"],"mappings":"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","sourcesContent":["/**\n * This component represents the entire panel which gets dropped down when the\n * user selects the component.  It encapsulates the search filter, the\n * Select-all item, and the list of options.\n */\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\n\nimport { useKey } from \"../hooks/use-key\";\nimport { useMultiSelect } from \"../hooks/use-multi-select\";\nimport { KEY } from \"../lib/constants\";\nimport { debounce } from \"../lib/debounce\";\nimport { filterOptions } from \"../lib/fuzzy-match-utils\";\nimport { Cross } from \"./cross\";\nimport SelectItem from \"./select-item\";\nimport SelectList from \"./select-list\";\n\nenum FocusType {\n  SEARCH = 0,\n  NONE = -1,\n}\n\nconst SelectPanel = () => {\n  const {\n    t,\n    onChange,\n    options,\n    setOptions,\n    value,\n    filterOptions: customFilterOptions,\n    ItemRenderer,\n    disabled,\n    disableSearch,\n    hasSelectAll,\n    ClearIcon,\n    debounceDuration,\n    isCreatable,\n    onCreateOption,\n  } = useMultiSelect();\n\n  const listRef = useRef<any>();\n  const searchInputRef = useRef<any>();\n  const [searchText, setSearchText] = useState(\"\");\n  const [filteredOptions, setFilteredOptions] = useState(options);\n  const [searchTextForFilter, setSearchTextForFilter] = useState(\"\");\n  const [focusIndex, setFocusIndex] = useState(0);\n  const debouncedSearch = useCallback(\n    debounce((query) => setSearchTextForFilter(query), debounceDuration),\n    []\n  );\n\n  const skipIndex = useMemo(() => {\n    let start = 0;\n\n    if (!disableSearch) start += 1; // if search is enabled then +1 to skipIndex\n    if (hasSelectAll) start += 1; // if select-all is enabled then +1 to skipIndex\n\n    return start;\n  }, [disableSearch, hasSelectAll]);\n\n  const selectAllOption = {\n    label: searchText ? t(\"selectAllFiltered\") : t(\"selectAll\"),\n    value: \"\",\n  };\n\n  const selectAllValues = (checked) => {\n    const filteredValues = filteredOptions\n      .filter((o) => !o.disabled)\n      .map((o) => o.value);\n\n    if (checked) {\n      const selectedValues = value.map((o) => o.value);\n      const finalSelectedValues = [...selectedValues, ...filteredValues];\n\n      return options.filter((o) => finalSelectedValues.includes(o.value));\n    }\n\n    return value.filter((o) => !filteredValues.includes(o.value));\n  };\n\n  const selectAllChanged = (checked: boolean) => {\n    const newOptions = selectAllValues(checked);\n    onChange(newOptions);\n  };\n\n  const handleSearchChange = (e) => {\n    debouncedSearch(e.target.value);\n    setSearchText(e.target.value);\n    setFocusIndex(FocusType.SEARCH);\n  };\n\n  const handleClear = () => {\n    setSearchTextForFilter(\"\");\n    setSearchText(\"\");\n    searchInputRef?.current?.focus();\n  };\n\n  const handleItemClicked = (index: number) => setFocusIndex(index);\n\n  // Arrow Key Navigation\n  const handleKeyDown = (e) => {\n    switch (e.code) {\n      case KEY.ARROW_UP:\n        updateFocus(-1);\n        break;\n      case KEY.ARROW_DOWN:\n        updateFocus(1);\n        break;\n      default:\n        return;\n    }\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  useKey([KEY.ARROW_DOWN, KEY.ARROW_UP], handleKeyDown, {\n    target: listRef,\n  });\n\n  const handleSearchFocus = () => {\n    setFocusIndex(FocusType.SEARCH);\n  };\n\n  const handleOnCreateOption = async () => {\n    let newOption = { label: searchText, value: searchText, __isNew__: true };\n\n    // if custom `onCreateOption` is given then this will call this\n    if (onCreateOption) {\n      newOption = await onCreateOption(searchText);\n    }\n\n    // adds created value to existing options\n    setOptions([newOption, ...options]);\n    handleClear();\n\n    onChange([...value, newOption]);\n  };\n\n  const getFilteredOptions = async () =>\n    customFilterOptions\n      ? await customFilterOptions(options, searchTextForFilter)\n      : filterOptions(options, searchTextForFilter);\n\n  const updateFocus = (offset: number) => {\n    let newFocus = focusIndex + offset;\n    newFocus = Math.max(0, newFocus);\n    newFocus = Math.min(newFocus, options.length + Math.max(skipIndex - 1, 0));\n    setFocusIndex(newFocus);\n  };\n\n  useEffect(() => {\n    listRef?.current?.querySelector(`[tabIndex='${focusIndex}']`)?.focus();\n  }, [focusIndex]);\n\n  const [isAllOptionSelected, hasSelectableOptions] = useMemo(() => {\n    const filteredOptionsList = filteredOptions.filter((o) => !o.disabled);\n    return [\n      filteredOptionsList.every(\n        (o) => value.findIndex((v) => v.value === o.value) !== -1\n      ),\n      filteredOptionsList.length !== 0,\n    ];\n    // eslint-disable-next-line\n  }, [filteredOptions, value]);\n\n  useEffect(() => {\n    getFilteredOptions().then(setFilteredOptions);\n  }, [searchTextForFilter, options]);\n\n  return (\n    <div className=\"select-panel\" role=\"listbox\" ref={listRef}>\n      {!disableSearch && (\n        <div className=\"search\">\n          <input\n            placeholder={t(\"search\")}\n            type=\"text\"\n            aria-describedby={t(\"search\")}\n            onChange={handleSearchChange}\n            onFocus={handleSearchFocus}\n            value={searchText}\n            ref={searchInputRef}\n            tabIndex={0}\n          />\n          <button\n            type=\"button\"\n            className=\"search-clear-button\"\n            hidden={!searchText}\n            onClick={handleClear}\n            aria-label={t(\"clearSearch\")}\n          >\n            {ClearIcon || <Cross />}\n          </button>\n        </div>\n      )}\n\n      <ul className=\"options\">\n        {hasSelectAll && hasSelectableOptions && (\n          <SelectItem\n            tabIndex={skipIndex === 1 ? 0 : 1}\n            checked={isAllOptionSelected}\n            option={selectAllOption}\n            onSelectionChanged={selectAllChanged}\n            onClick={() => handleItemClicked(1)}\n            itemRenderer={ItemRenderer}\n            disabled={disabled}\n          />\n        )}\n\n        {filteredOptions.length ? (\n          <SelectList\n            skipIndex={skipIndex}\n            options={filteredOptions}\n            onClick={(_e, index) => handleItemClicked(index)}\n          />\n        ) : isCreatable ? (\n          <li onClick={handleOnCreateOption} className=\"select-item creatable\">\n            {`${t(\"create\")} \"${searchText}\"`}\n          </li>\n        ) : (\n          <li className=\"no-options\">{t(\"noOptions\")}</li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default SelectPanel;\n"]},"metadata":{},"sourceType":"module"}