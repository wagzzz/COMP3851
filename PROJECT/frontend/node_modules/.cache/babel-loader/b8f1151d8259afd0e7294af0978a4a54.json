{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\itswa\\\\Desktop\\\\Complete\\\\frontend\\\\src\\\\components\\\\Admin\\\\Course\\\\CourseList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Modal, Form, ToastContainer, Toast, Card, ListGroup, Row, Col, ButtonGroup } from 'react-bootstrap';\nimport axios from \"axios\";\nimport { config } from \"../../../constants\";\nimport CourseModal from \"./CourseModal\";\nimport { FaPencilAlt, FaTrashAlt } from \"react-icons/fa\";\nimport Dialog from \"react-bootstrap-dialog\";\nimport { onToast } from \"../../../utils/toastUtil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CourseList = props => {\n  _s();\n\n  /** Course Board Start **/\n  const [courses, setCourses] = useState([]);\n  const [courseModalShow, setCourseModalShow] = useState(false);\n  const [course, setCourse] = useState();\n  useEffect(() => {\n    // here goes the data fetching\n    const fetchCoursesList = async () => {\n      let res = await axios.get('/admin/courses', config);\n      setCourses(await res.data);\n    };\n\n    fetchCoursesList();\n  }, []);\n\n  const onCourseCreate = () => {\n    setCourse(null);\n    setCourseModalShow(true);\n  };\n\n  const onCourseEdit = course => {\n    setCourse(course);\n    setCourseModalShow(true);\n  };\n\n  let dialog = null;\n\n  const onCourseDelete = course => {\n    const deleteCourse = async () => {\n      try {\n        let res = await axios.delete('/admin/course/' + course.courseId, config);\n        onToast('Successfully deleted!', 'success');\n        let _courses = [];\n        courses.forEach(cr => {\n          if (cr.courseId !== course.courseId) _courses.push(cr);\n        });\n        setCourses(_courses);\n      } catch (err) {\n        onToast('Server Error!', 'error');\n      }\n    };\n\n    dialog.show({\n      title: 'Delete course',\n      body: 'Are you sure?',\n      actions: [Dialog.CancelAction(), Dialog.DefaultAction('Remove', () => {\n        deleteCourse();\n      }, 'btn-danger')],\n      bsSize: 'small',\n      onHide: dialog => {\n        dialog.hide();\n      }\n    });\n  };\n  /** Course Board End **/\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(Card.Title, {\n          as: \"h3\",\n          children: [\"List of Courses\", /*#__PURE__*/_jsxDEV(Button, {\n            size: \"sm\",\n            variant: \"outline-success\",\n            className: \"float-end mt-1\",\n            onClick: onCourseCreate,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-plus\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), \"+ Create Course\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: courses.map(course => {\n          return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              className: \"pl-3\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                md: 10,\n                lg: 9,\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: course.code\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: course.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 2,\n                lg: 3,\n                className: \"text-right\",\n                style: {\n                  position: 'relative'\n                },\n                children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                  className: \"list-btn-group\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    className: \"list-edit-btn me-3\",\n                    variant: \"outline-primary\",\n                    size: \"sm\",\n                    onClick: () => onCourseEdit(course),\n                    children: /*#__PURE__*/_jsxDEV(FaPencilAlt, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 105,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"list-delete-btn\",\n                    variant: \"outline-danger\",\n                    size: \"sm\",\n                    onClick: () => onCourseDelete(course),\n                    children: /*#__PURE__*/_jsxDEV(FaTrashAlt, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)\n          }, course.courseId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CourseModal, {\n      show: courseModalShow,\n      course: course,\n      onHide: () => setCourseModalShow(false),\n      onCreateCourse: course => {\n        let _courses = courses.slice();\n\n        _courses.push(course);\n\n        setCourses(_courses);\n      },\n      onEditCourse: course => {\n        let _courses = courses.slice();\n\n        _courses = _courses.map(cr => {\n          return cr.courseId === course.courseId ? course : cr;\n        });\n        setCourses(_courses);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      ref: component => {\n        dialog = component;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CourseList, \"tWgVEiBP6Ut5+8IhZlKYpXj2lbQ=\");\n\n_c = CourseList;\nexport default CourseList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseList\");","map":{"version":3,"sources":["C:/Users/itswa/Desktop/Complete/frontend/src/components/Admin/Course/CourseList.js"],"names":["React","useState","useEffect","Button","Modal","Form","ToastContainer","Toast","Card","ListGroup","Row","Col","ButtonGroup","axios","config","CourseModal","FaPencilAlt","FaTrashAlt","Dialog","onToast","CourseList","props","courses","setCourses","courseModalShow","setCourseModalShow","course","setCourse","fetchCoursesList","res","get","data","onCourseCreate","onCourseEdit","dialog","onCourseDelete","deleteCourse","delete","courseId","_courses","forEach","cr","push","err","show","title","body","actions","CancelAction","DefaultAction","bsSize","onHide","hide","map","code","name","position","slice","component"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\r\nimport {Button, Modal, Form, ToastContainer, Toast, Card, ListGroup, Row, Col, ButtonGroup} from 'react-bootstrap'\r\nimport axios from \"axios\"\r\nimport {config} from \"../../../constants\"\r\nimport CourseModal from \"./CourseModal\"\r\nimport {FaPencilAlt, FaTrashAlt} from \"react-icons/fa\";\r\nimport Dialog from \"react-bootstrap-dialog\";\r\nimport {onToast} from \"../../../utils/toastUtil\";\r\n\r\nconst CourseList = (props) => {\r\n\r\n    /** Course Board Start **/\r\n    const [courses, setCourses] = useState([])\r\n    const [courseModalShow, setCourseModalShow] = useState(false)\r\n    const [course, setCourse] = useState()\r\n\r\n    useEffect(() => {\r\n        // here goes the data fetching\r\n        const fetchCoursesList = async () => {\r\n            let res = await axios.get('/admin/courses', config)\r\n            setCourses(await res.data)\r\n        }\r\n        fetchCoursesList()\r\n    }, [])\r\n\r\n    const onCourseCreate = () => {\r\n        setCourse(null)\r\n        setCourseModalShow(true)\r\n    }\r\n\r\n    const onCourseEdit = (course) => {\r\n        setCourse(course)\r\n        setCourseModalShow(true)\r\n    }\r\n\r\n    let dialog = null;\r\n\r\n    const onCourseDelete = (course) => {\r\n        const deleteCourse = async () => {\r\n            try {\r\n                let res = await axios.delete('/admin/course/' + course.courseId, config)\r\n                onToast('Successfully deleted!', 'success')\r\n                let _courses = []\r\n                courses.forEach((cr) => {\r\n                    if(cr.courseId !== course.courseId) _courses.push(cr)\r\n                })\r\n                setCourses(_courses)\r\n            } catch (err) {\r\n                onToast('Server Error!', 'error')\r\n            }\r\n\r\n\r\n        }\r\n\r\n        dialog.show({\r\n            title: 'Delete course',\r\n            body: 'Are you sure?',\r\n            actions: [\r\n                Dialog.CancelAction(),\r\n                Dialog.DefaultAction(\r\n                    'Remove',\r\n                    () => {\r\n                        deleteCourse()\r\n                    },\r\n                    'btn-danger'\r\n                )\r\n            ],\r\n            bsSize: 'small',\r\n            onHide: (dialog) => {\r\n                dialog.hide()\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    /** Course Board End **/\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Card.Header className=\"text-center\">\r\n                    <Card.Title as=\"h3\">\r\n                        List of Courses\r\n                        <Button size=\"sm\" variant=\"outline-success\" className=\"float-end mt-1\" onClick={onCourseCreate}>\r\n                            <i className=\"fas fa-plus\"></i>\r\n                            + Create Course</Button>\r\n                    </Card.Title>\r\n                </Card.Header>\r\n                <ListGroup>\r\n                    {courses.map(course => {\r\n                        return <ListGroup.Item key={course.courseId}>\r\n                            <Row className=\"pl-3\">\r\n                                <Col md={10} lg={9}>\r\n                                    <h5>{course.code}</h5>\r\n                                    <h6>{course.name}</h6>\r\n                                </Col>\r\n                                <Col md={2} lg={3} className=\"text-right\" style={{position:'relative'}}>\r\n                                    <ButtonGroup className=\"list-btn-group\">\r\n                                        <Button\r\n                                            className=\"list-edit-btn me-3\"\r\n                                            variant=\"outline-primary\"\r\n                                            size=\"sm\"\r\n                                            onClick={() => onCourseEdit(course)}\r\n                                        >\r\n                                            <FaPencilAlt />\r\n                                        </Button>\r\n                                        <Button\r\n                                            className=\"list-delete-btn\"\r\n                                            variant=\"outline-danger\"\r\n                                            size=\"sm\"\r\n                                            onClick={() => onCourseDelete(course)}\r\n                                        >\r\n                                            <FaTrashAlt />\r\n                                        </Button>\r\n                                    </ButtonGroup>\r\n                                </Col>\r\n\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                    })}\r\n                </ListGroup>\r\n\r\n            </Card>\r\n\r\n            <CourseModal\r\n                show={courseModalShow}\r\n                course={course}\r\n                onHide={() => setCourseModalShow(false)}\r\n                onCreateCourse={ (course) => {\r\n                    let _courses = courses.slice()\r\n                    _courses.push(course)\r\n                    setCourses(_courses)\r\n                } }\r\n                onEditCourse={ (course) => {\r\n                    let _courses = courses.slice()\r\n                    _courses = _courses.map((cr) => {\r\n                        return (cr.courseId === course.courseId) ? course : cr\r\n                    })\r\n                    setCourses(_courses)\r\n                } }\r\n            />\r\n            <Dialog ref={(component) => { dialog = component }} />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default CourseList"]},"metadata":{},"sourceType":"module"}