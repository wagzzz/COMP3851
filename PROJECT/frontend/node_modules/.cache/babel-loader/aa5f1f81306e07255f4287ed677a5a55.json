{"ast":null,"code":"import { useEffect, useRef } from \"react\";\n/**\n * similar to `useEffect` but gets triggered only when value changes\n * @param fn executable function on dependency updates\n * @param inputs dependency array\n */\n\nexport function useDidUpdateEffect(fn, inputs) {\n  var didMountRef = useRef(false);\n  useEffect(() => {\n    if (didMountRef.current) fn();else didMountRef.current = true;\n  }, inputs);\n}","map":{"version":3,"sources":["../../../src/hooks/use-did-update-effect.tsx"],"names":["didMountRef","useRef","useEffect","fn"],"mappings":"AAAA,SAAA,SAAA,EAAA,MAAA,QAAA,OAAA;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAAA,kBAAA,CAAA,EAAA,EAAA,MAAA,EAAwC;AAC7C,MAAMA,WAAW,GAAGC,MAAM,CAA1B,KAA0B,CAA1B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIF,WAAW,CAAf,OAAA,EAAyBG,EAAzB,GAAA,KACKH,WAAW,CAAXA,OAAAA,GAAAA,IAAAA;AAFE,GAAA,EAATE,MAAS,CAATA;AAID","sourcesContent":["import { useEffect, useRef } from \"react\";\n\n/**\n * similar to `useEffect` but gets triggered only when value changes\n * @param fn executable function on dependency updates\n * @param inputs dependency array\n */\nexport function useDidUpdateEffect(fn, inputs) {\n  const didMountRef = useRef(false);\n\n  useEffect(() => {\n    if (didMountRef.current) fn();\n    else didMountRef.current = true;\n  }, inputs);\n}\n"]},"metadata":{},"sourceType":"module"}