{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\itswa\\\\Desktop\\\\Complete\\\\frontend\\\\src\\\\components\\\\User\\\\DegreePlan\\\\DegreePlanCreate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Modal, Form, Col, Row, Card } from 'react-bootstrap';\nimport axios from \"axios\";\nimport { config } from \"../../../constants\";\nimport { isNull } from \"../../../utils/stringUtil\";\nimport { onToast } from \"../../../utils/toastUtil\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DegreePlanCreate = props => {\n  _s();\n\n  const [degreePlan, setDegreePlan] = useState({});\n  const [degrees, setDegrees] = useState([]);\n  useEffect(() => {\n    // here goes the data fetching\n    const fetchDegreeList = async () => {\n      try {\n        let res = await axios.get('/user/degrees', config);\n        setDegrees(await res.data);\n      } catch (err) {}\n    };\n\n    fetchDegreeList();\n  }, []);\n\n  const onInput = ({\n    target: {\n      value,\n      id\n    }\n  }) => {\n    if (id === 'degreeId') {\n      setDegreePlan({ ...degreePlan,\n        degree: {\n          degreeId: value\n        }\n      });\n    } else {\n      setDegreePlan({ ...degreePlan,\n        [id]: value\n      });\n    }\n  };\n\n  const onSubmit = async () => {\n    if (isNull(degreePlan)) {\n      onToast('Fill all inputs!', 'warn');\n      return;\n    }\n\n    if (isNull(degreePlan.savedName)) {\n      onToast('Fill Name!', 'warn');\n      return;\n    }\n\n    if (isNull(degreePlan.degree)) {\n      onToast('Select degree!', 'warn');\n      return;\n    }\n\n    if (isNull(degreePlan.startSemester)) {\n      onToast('Select start semester!', 'warn');\n      return;\n    }\n\n    let degree = degrees.filter(degree => degree.degreeId == degreePlan.degree.degreeId);\n\n    if (degree.length == 0) {\n      onToast('Degree Selection Error!', 'error');\n      return;\n    }\n\n    degree = degree[0];\n    let _degreePlan = {\n      degree: degree,\n      assignedToUser: true,\n      user: props.user,\n      savedName: degreePlan.savedName,\n      startSemester: degreePlan.startSemester\n    };\n\n    try {\n      let res = await axios.post('/user/degreePlan', JSON.stringify(_degreePlan), config);\n      onToast('Successfully saved!', 'success');\n      setDegreePlan({});\n      props.onAddDegreePlan(res.data);\n    } catch (err) {\n      let {\n        status\n      } = err.response;\n\n      if (status === 400) {\n        onToast('Admin template not exists!', 'error');\n        return;\n      }\n\n      onToast('Server Error!', 'error');\n      return;\n    }\n  };\n\n  const onRest = () => {\n    setDegreePlan({});\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(Card.Title, {\n        as: \"h3\",\n        children: \"Create new Degree Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"savedName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Degree Plan Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter degree plan name\",\n              onChange: onInput,\n              value: degreePlan && degreePlan.savedName ? degreePlan.savedName : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mt-3\",\n            controlId: \"degreeId\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Degree\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              \"aria-label\": \"Select Degree\",\n              onChange: onInput,\n              value: degreePlan && degreePlan.degree ? degreePlan.degree.degreeId : \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this), degrees.map(degree => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: degree.degreeId,\n                children: [degree.name, \" / \", degree.major]\n              }, degree.degreeId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mt-3\",\n            controlId: \"startSemester\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Start Semester\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              \"aria-label\": \"Select start semester\",\n              onChange: onInput,\n              value: degreePlan && degreePlan.startSemester ? degreePlan.startSemester : \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1\",\n                children: \"Semester 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"2\",\n                children: \"Semester 2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            onClick: () => onSubmit(),\n            className: \"me-3\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => onRest(),\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DegreePlanCreate, \"1y2/PAPe2orc1mLtjI8RtYcnIZ0=\");\n\n_c = DegreePlanCreate;\nexport default DegreePlanCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"DegreePlanCreate\");","map":{"version":3,"sources":["C:/Users/itswa/Desktop/Complete/frontend/src/components/User/DegreePlan/DegreePlanCreate.js"],"names":["React","useState","useEffect","Button","Modal","Form","Col","Row","Card","axios","config","isNull","onToast","ToastContainer","toast","DegreePlanCreate","props","degreePlan","setDegreePlan","degrees","setDegrees","fetchDegreeList","res","get","data","err","onInput","target","value","id","degree","degreeId","onSubmit","savedName","startSemester","filter","length","_degreePlan","assignedToUser","user","post","JSON","stringify","onAddDegreePlan","status","response","onRest","map","name","major"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\r\nimport {Button, Modal, Form, Col, Row, Card} from 'react-bootstrap'\r\nimport axios from \"axios\"\r\nimport {config} from \"../../../constants\"\r\nimport {isNull} from \"../../../utils/stringUtil\"\r\nimport {onToast} from \"../../../utils/toastUtil\"\r\nimport {ToastContainer, toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst DegreePlanCreate = (props) => {\r\n\r\n    const [degreePlan, setDegreePlan] = useState({})\r\n    const [degrees, setDegrees] = useState([])\r\n\r\n    useEffect(() => {\r\n        // here goes the data fetching\r\n        const fetchDegreeList = async () => {\r\n            try {\r\n                let res = await axios.get('/user/degrees', config)\r\n                setDegrees(await res.data)\r\n            } catch (err) {\r\n\r\n            }\r\n\r\n        }\r\n        fetchDegreeList()\r\n    }, [])\r\n\r\n    const onInput = ({target: {value, id}}) => {\r\n        if(id === 'degreeId') {\r\n            setDegreePlan({\r\n                ...degreePlan,\r\n                degree: {\r\n                    degreeId: value\r\n                }\r\n            })\r\n        } else {\r\n            setDegreePlan({\r\n                ...degreePlan,\r\n                [id]: value\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const onSubmit = async () => {\r\n        if (isNull(degreePlan)) {\r\n            onToast('Fill all inputs!', 'warn');\r\n            return;\r\n        }\r\n        if (isNull(degreePlan.savedName)) {\r\n            onToast('Fill Name!', 'warn');\r\n            return;\r\n        }\r\n        if (isNull(degreePlan.degree)) {\r\n            onToast('Select degree!', 'warn');\r\n            return;\r\n        }\r\n        if (isNull(degreePlan.startSemester)) {\r\n            onToast('Select start semester!', 'warn');\r\n            return;\r\n        }\r\n\r\n        let degree = degrees.filter((degree) => (degree.degreeId == degreePlan.degree.degreeId));\r\n        if(degree.length == 0) {\r\n            onToast('Degree Selection Error!', 'error');\r\n            return;\r\n        }\r\n        degree = degree[0];\r\n        let _degreePlan = {\r\n            degree: degree,\r\n            assignedToUser: true,\r\n            user: props.user,\r\n            savedName: degreePlan.savedName,\r\n            startSemester: degreePlan.startSemester\r\n        }\r\n\r\n        try {\r\n            let res = await axios.post('/user/degreePlan', JSON.stringify(_degreePlan), config)\r\n            onToast('Successfully saved!', 'success')\r\n            setDegreePlan({})\r\n            props.onAddDegreePlan(res.data)\r\n        } catch (err) {\r\n            let { status } = err.response;\r\n            if(status === 400) {\r\n                onToast('Admin template not exists!', 'error')\r\n                return;\r\n            }\r\n\r\n            onToast('Server Error!', 'error');\r\n            return;\r\n        }\r\n    }\r\n\r\n    const onRest = () => {\r\n        setDegreePlan({})\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Header className=\"text-center\">\r\n                <Card.Title as=\"h3\">\r\n                    Create new Degree Plan\r\n                </Card.Title>\r\n            </Card.Header>\r\n            <Card.Body>\r\n                <Form>\r\n                    <Row className=\"mb-3\">\r\n                        <Form.Group controlId=\"savedName\">\r\n                            <Form.Label>Degree Plan Name</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter degree plan name\"\r\n                                          onChange={onInput}\r\n                                          value={degreePlan && degreePlan.savedName ? degreePlan.savedName : \"\"}/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"degreeId\">\r\n                            <Form.Label>Degree</Form.Label>\r\n                            <Form.Select aria-label=\"Select Degree\"\r\n                                         onChange={onInput}\r\n                                         value={ degreePlan && degreePlan.degree ? degreePlan.degree.degreeId : \"\" }>\r\n                                <option disabled></option>\r\n                                {\r\n                                    degrees.map( (degree) =>\r\n                                        <option key={degree.degreeId} value={degree.degreeId}>{degree.name} / {degree.major}</option>\r\n                                    )\r\n                                }\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mt-3\" controlId=\"startSemester\">\r\n                            <Form.Label>Start Semester</Form.Label>\r\n                            <Form.Select aria-label=\"Select start semester\"\r\n                                         onChange={onInput}\r\n                                         value={degreePlan && degreePlan.startSemester ? degreePlan.startSemester : \"\"}>\r\n                                <option disabled></option>\r\n                                <option value=\"1\">Semester 1</option>\r\n                                <option value=\"2\">Semester 2</option>\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <div>\r\n                        <Button variant=\"primary\" type=\"submit\" onClick={() => onSubmit()} className=\"me-3\">\r\n                            Save\r\n                        </Button>\r\n                        <Button variant=\"secondary\" onClick={() => onRest() }>Reset</Button>\r\n                    </div>\r\n\r\n                </Form>\r\n            </Card.Body>\r\n            <ToastContainer/>\r\n        </Card>\r\n\r\n    )\r\n}\r\n\r\nexport default DegreePlanCreate"]},"metadata":{},"sourceType":"module"}