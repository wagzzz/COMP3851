{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\itswa\\\\Desktop\\\\Complete\\\\frontend\\\\src\\\\components\\\\Admin\\\\Course\\\\CourseModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Modal, Form } from 'react-bootstrap';\nimport axios from \"axios\";\nimport { config } from \"../../../constants\";\nimport { isNull } from \"../../../utils/stringUtil\";\nimport { onToast } from \"../../../utils/toastUtil\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CourseModal = props => {\n  _s();\n\n  const initialCourse = props.course;\n  const [modalCourse, setModalCourse] = useState(initialCourse);\n  useEffect(() => {\n    setModalCourse(initialCourse);\n  }, [initialCourse]);\n\n  const onInput = ({\n    target: {\n      value,\n      id\n    }\n  }) => {\n    setModalCourse({ ...modalCourse,\n      [id]: value\n    });\n  };\n\n  const onSubmit = () => {\n    if (isNull(modalCourse)) {\n      onToast('Fill all inputs!', 'warn');\n      return;\n    }\n\n    if (isNull(modalCourse.code)) {\n      onToast('Fill Course Code!', 'warn');\n      return;\n    }\n\n    if (isNull(modalCourse.name)) {\n      onToast('Fill Course Name!', 'warn');\n      return;\n    }\n\n    if (isNull(modalCourse.level)) {\n      onToast('Fill Course Level!', 'warn');\n      return;\n    }\n\n    if (isNull(modalCourse.units)) {\n      onToast('Fill Course Units!', 'warn');\n      return;\n    }\n\n    const submitCourseData = async () => {\n      let res;\n\n      try {\n        if (initialCourse === null) {\n          res = await axios.post('/admin/course', JSON.stringify(modalCourse), config);\n          props.onCreateCourse(res.data);\n        } else {\n          res = await axios.put('/admin/course', JSON.stringify(modalCourse), config);\n          props.onEditCourse(res.data);\n        }\n\n        onToast('Successfully saved!', 'success');\n        props.onHide();\n      } catch (err) {\n        let {\n          status\n        } = err.response;\n\n        if (status === 400) {\n          onToast('Course code duplicated!', 'error');\n          return;\n        }\n\n        onToast('Server error!', 'error');\n      }\n    };\n\n    submitCourseData();\n  };\n\n  const onModalHide = () => {\n    setModalCourse(initialCourse);\n    props.onHide();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, { ...props,\n      \"aria-labelledby\": \"course-edit-modal\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"course-edit-modal\",\n          children: initialCourse === null ? 'Create course' : 'Edit course'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"code\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter course code\",\n              onChange: onInput,\n              value: modalCourse && modalCourse.code ? modalCourse.code : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"Code must be unique.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"name\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter course name\",\n              onChange: onInput,\n              value: modalCourse && modalCourse.name ? modalCourse.name : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"level\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Level\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              \"aria-label\": \"Select level\",\n              onChange: onInput,\n              value: modalCourse && modalCourse.level ? modalCourse.level : \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                placeholder: \"Select level\",\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1\",\n                children: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"2\",\n                children: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"3\",\n                children: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"4\",\n                children: \"4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"units\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Number of units\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              placeholder: \"Enter number of units\",\n              onChange: onInput,\n              value: modalCourse && modalCourse.units ? modalCourse.units : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          onClick: onSubmit,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: onModalHide,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CourseModal, \"5Leu0Egbt4poCK5cPbxjumE+M/U=\");\n\n_c = CourseModal;\nexport default CourseModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseModal\");","map":{"version":3,"sources":["C:/Users/itswa/Desktop/Complete/frontend/src/components/Admin/Course/CourseModal.js"],"names":["React","useState","useEffect","Button","Modal","Form","axios","config","isNull","onToast","ToastContainer","toast","CourseModal","props","initialCourse","course","modalCourse","setModalCourse","onInput","target","value","id","onSubmit","code","name","level","units","submitCourseData","res","post","JSON","stringify","onCreateCourse","data","put","onEditCourse","onHide","err","status","response","onModalHide"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\r\nimport {Button, Modal, Form} from 'react-bootstrap'\r\nimport axios from \"axios\"\r\nimport {config} from \"../../../constants\"\r\nimport {isNull} from \"../../../utils/stringUtil\"\r\nimport {onToast} from \"../../../utils/toastUtil\"\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst CourseModal = (props) => {\r\n\r\n\r\n    const initialCourse = props.course\r\n    const [modalCourse, setModalCourse] = useState(initialCourse)\r\n\r\n    useEffect(() => {\r\n        setModalCourse(initialCourse)\r\n    }, [initialCourse])\r\n\r\n    const onInput = ({target: {value, id}}) => {\r\n        setModalCourse({\r\n            ...modalCourse,\r\n            [id]: value\r\n        })\r\n    }\r\n\r\n    const onSubmit = () => {\r\n        if (isNull(modalCourse)) {\r\n            onToast('Fill all inputs!', 'warn');\r\n            return;\r\n        }\r\n\r\n        if (isNull(modalCourse.code)) {\r\n            onToast('Fill Course Code!', 'warn');\r\n            return;\r\n        }\r\n        if (isNull(modalCourse.name)) {\r\n            onToast('Fill Course Name!', 'warn');\r\n            return;\r\n        }\r\n        if (isNull(modalCourse.level)) {\r\n            onToast('Fill Course Level!', 'warn');\r\n            return;\r\n        }\r\n        if (isNull(modalCourse.units)) {\r\n            onToast('Fill Course Units!', 'warn');\r\n            return;\r\n        }\r\n\r\n        const submitCourseData = async () => {\r\n            let res;\r\n            try {\r\n                if (initialCourse === null) {\r\n                    res = await axios.post('/admin/course', JSON.stringify(modalCourse), config)\r\n                    props.onCreateCourse(res.data)\r\n                } else {\r\n                    res = await axios.put('/admin/course', JSON.stringify(modalCourse), config)\r\n                    props.onEditCourse(res.data)\r\n                }\r\n                onToast('Successfully saved!', 'success');\r\n                props.onHide()\r\n            } catch(err) {\r\n                let { status } = err.response;\r\n                if(status === 400) {\r\n                    onToast('Course code duplicated!', 'error');\r\n                    return;\r\n                }\r\n                onToast('Server error!', 'error');\r\n            }\r\n        }\r\n        submitCourseData()\r\n    }\r\n\r\n    const onModalHide = () => {\r\n        setModalCourse(initialCourse)\r\n        props.onHide()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ToastContainer />\r\n            <Modal\r\n                {...props}\r\n                aria-labelledby=\"course-edit-modal\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"course-edit-modal\">\r\n                        {initialCourse === null ? 'Create course' : 'Edit course'}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"code\">\r\n                            <Form.Label>Code</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter course code\"\r\n                                          onChange={onInput}\r\n                                          value={modalCourse && modalCourse.code ? modalCourse.code : \"\"}/>\r\n                            <Form.Text className=\"text-muted\">\r\n                                Code must be unique.\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mb-3\" controlId=\"name\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter course name\"\r\n                                          onChange={onInput}\r\n                                          value={modalCourse && modalCourse.name ? modalCourse.name : \"\"}/>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"level\">\r\n                            <Form.Label>Level</Form.Label>\r\n                            <Form.Select aria-label=\"Select level\"\r\n                                         onChange={onInput}\r\n                                         value={modalCourse && modalCourse.level ? modalCourse.level : \"\"}>\r\n                                <option placeholder=\"Select level\" disabled></option>\r\n                                <option value=\"1\">1</option>\r\n                                <option value=\"2\">2</option>\r\n                                <option value=\"3\">3</option>\r\n                                <option value=\"4\">4</option>\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"units\">\r\n                            <Form.Label>Number of units</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"Enter number of units\"\r\n                                          onChange={onInput}\r\n                                          value={modalCourse && modalCourse.units ? modalCourse.units : \"\"}/>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" type=\"submit\" onClick={onSubmit}>\r\n                        Save\r\n                    </Button>\r\n                    <Button variant=\"secondary\" onClick={onModalHide}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default CourseModal"]},"metadata":{},"sourceType":"module"}