{"ast":null,"code":"/**\n * This component represents an individual item in the multi-select drop-down\n */\nimport React, { useRef } from \"react\";\nimport { useKey } from \"../hooks/use-key\";\nimport { KEY } from \"../lib/constants\";\nimport DefaultItemRenderer from \"./default-item\";\n\nvar SelectItem = _ref => {\n  var {\n    itemRenderer: ItemRenderer = DefaultItemRenderer,\n    option,\n    checked,\n    tabIndex,\n    disabled,\n    onSelectionChanged,\n    onClick\n  } = _ref;\n  var itemRef = useRef();\n\n  var onOptionCheck = e => {\n    toggleChecked();\n    e.preventDefault();\n  };\n\n  var toggleChecked = () => {\n    if (!disabled) {\n      onSelectionChanged(!checked);\n    }\n  };\n\n  var handleClick = e => {\n    toggleChecked();\n    onClick(e);\n  };\n\n  useKey([KEY.ENTER, KEY.SPACE], onOptionCheck, {\n    target: itemRef\n  });\n  return /*#__PURE__*/React.createElement(\"label\", {\n    className: \"select-item \" + (checked && \"selected\"),\n    role: \"option\",\n    \"aria-selected\": checked,\n    tabIndex: tabIndex,\n    ref: itemRef\n  }, /*#__PURE__*/React.createElement(ItemRenderer, {\n    option: option,\n    checked: checked,\n    onClick: handleClick,\n    disabled: disabled\n  }));\n};\n\nexport default SelectItem;","map":{"version":3,"sources":["../../../src/select-panel/select-item.tsx"],"names":["SelectItem","itemRenderer","ItemRenderer","onClick","itemRef","useRef","onOptionCheck","e","toggleChecked","onSelectionChanged","handleClick","useKey","KEY","target","checked","disabled"],"mappings":"AAAA;AACA;AACA;AACA,OAAA,KAAA,IAAA,MAAA,QAAA,OAAA;AAEA,SAAA,MAAA,QAAA,kBAAA;AACA,SAAA,GAAA,QAAA,kBAAA;AAEA,OAAA,mBAAA,MAAA,gBAAA;;AAYA,IAAMA,UAAU,GAAG,IAAA,IAQK;AAAA,MARJ;AAClBC,IAAAA,YAAY,EAAEC,YAAY,GADR,mBAAA;AAAA,IAAA,MAAA;AAAA,IAAA,OAAA;AAAA,IAAA,QAAA;AAAA,IAAA,QAAA;AAAA,IAAA,kBAAA;AAOlBC,IAAAA;AAPkB,MAQI,IAAA;AACtB,MAAMC,OAAY,GAAGC,MAArB,EAAA;;AAEA,MAAMC,aAAa,GAAIC,CAAD,IAAO;AAC3BC,IAAAA,aAAa;AACbD,IAAAA,CAAC,CAADA,cAAAA;AAFF,GAAA;;AAKA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAI,CAAJ,QAAA,EAAe;AACbC,MAAAA,kBAAkB,CAAC,CAAnBA,OAAkB,CAAlBA;AACD;AAHH,GAAA;;AAMA,MAAMC,WAAW,GAAIH,CAAD,IAAO;AACzBC,IAAAA,aAAa;AACbL,IAAAA,OAAO,CAAPA,CAAO,CAAPA;AAFF,GAAA;;AAKAQ,EAAAA,MAAM,CAAC,CAACC,GAAG,CAAJ,KAAA,EAAYA,GAAG,CAAhB,KAAC,CAAD,EAAA,aAAA,EAAwC;AAAEC,IAAAA,MAAM,EAAET;AAAV,GAAxC,CAANO;AAEA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AACE,IAAA,SAAS,EAAA,kBAAiBG,OAAO,IADnC,UACW,CADX;AAEE,IAAA,IAAI,EAFN,QAAA;AAGE,qBAHF,OAAA;AAIE,IAAA,QAAQ,EAJV,QAAA;AAKE,IAAA,GAAG,EAAEV;AALP,GAAA,EAAA,aAOE,KAAA,CAAA,aAAA,CAAA,YAAA,EAAA;AACE,IAAA,MAAM,EADR,MAAA;AAEE,IAAA,OAAO,EAFT,OAAA;AAGE,IAAA,OAAO,EAHT,WAAA;AAIE,IAAA,QAAQ,EAAEW;AAJZ,GAAA,CAPF,CADF;AA7BF,CAAA;;AA+CA,eAAA,UAAA","sourcesContent":["/**\n * This component represents an individual item in the multi-select drop-down\n */\nimport React, { useRef } from \"react\";\n\nimport { useKey } from \"../hooks/use-key\";\nimport { KEY } from \"../lib/constants\";\nimport { Option } from \"../lib/interfaces\";\nimport DefaultItemRenderer from \"./default-item\";\n\ninterface ISelectItemProps {\n  itemRenderer;\n  option: Option;\n  checked?: boolean;\n  tabIndex?: number;\n  disabled?: boolean;\n  onSelectionChanged: (checked: boolean) => void;\n  onClick;\n}\n\nconst SelectItem = ({\n  itemRenderer: ItemRenderer = DefaultItemRenderer,\n  option,\n  checked,\n  tabIndex,\n  disabled,\n  onSelectionChanged,\n  onClick,\n}: ISelectItemProps) => {\n  const itemRef: any = useRef();\n\n  const onOptionCheck = (e) => {\n    toggleChecked();\n    e.preventDefault();\n  };\n\n  const toggleChecked = () => {\n    if (!disabled) {\n      onSelectionChanged(!checked);\n    }\n  };\n\n  const handleClick = (e) => {\n    toggleChecked();\n    onClick(e);\n  };\n\n  useKey([KEY.ENTER, KEY.SPACE], onOptionCheck, { target: itemRef });\n\n  return (\n    <label\n      className={`select-item ${checked && \"selected\"}`}\n      role=\"option\"\n      aria-selected={checked}\n      tabIndex={tabIndex}\n      ref={itemRef}\n    >\n      <ItemRenderer\n        option={option}\n        checked={checked}\n        onClick={handleClick}\n        disabled={disabled}\n      />\n    </label>\n  );\n};\n\nexport default SelectItem;\n"]},"metadata":{},"sourceType":"module"}