{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\itswa\\\\Desktop\\\\Complete\\\\frontend\\\\src\\\\components\\\\Admin\\\\DegreePlan\\\\AdminDegreePlan.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logout } from '../../../store/actions/authActions';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { Button, Container, Navbar, Row, Col, Modal, Form } from 'react-bootstrap';\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport AdminCoursePlanItem from \"./AdminCoursePlanItem\";\nimport DisabledCoursePlanItem from \"./DisabledCoursePlanItem\";\nimport axios from \"axios\";\nimport { config } from \"../../../constants\";\nimport YearPanel from \"./YearPanel\";\nimport SemesterPanel from \"./SemesterPanel\";\nimport { useParams } from \"react-router-dom\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { isNull } from \"../../../utils/stringUtil\";\nimport { onToast } from \"../../../utils/toastUtil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminDegreePlan = () => {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const signout = () => {\n    dispatch(logout());\n  };\n\n  let {\n    degreeId\n  } = useParams();\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const [degreePlan, setDegreePlan] = useState({});\n  const [coursePlans, setCoursePlans] = useState([]);\n  const [coursePlan, setCoursePlan] = useState({});\n  const [restraints, setRestraints] = useState([]);\n  const [modalShow, setModalShow] = useState(false);\n  const [yearList, setYearList] = useState([]);\n  useEffect(() => {\n    // here goes the data fetching\n    const fetchDegreePlan = async () => {\n      let res = await axios.get('/admin/degreePlan/' + degreeId, config);\n\n      let _coursePlans = res.data.coursePlans.sort((a, b) => {\n        return a.sequence - b.sequence;\n      });\n\n      setDegreePlan(_coursePlans[0].degreePlan);\n      setCoursePlans(_coursePlans);\n      let _yearList = [];\n\n      for (let i = 1; i <= _coursePlans.length / 8; i++) _yearList.push(i);\n\n      setYearList(_yearList);\n      setRestraints(res.data.restraints);\n    };\n\n    fetchDegreePlan();\n  }, []);\n\n  const swapCoursePlan = (fromCoursePlan, toCoursePlan) => {\n    let items = coursePlans.slice();\n    let fromIndex = -1;\n    let toIndex = -1;\n\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].id === fromCoursePlan.id) {\n        fromIndex = i;\n      }\n\n      if (items[i].id === toCoursePlan.id) {\n        toIndex = i;\n      }\n    }\n\n    if (fromIndex != -1 && toIndex != -1) {\n      let buf = items[fromIndex];\n      items[fromIndex] = items[toIndex];\n      items[toIndex] = buf;\n      setCoursePlans(items);\n    }\n  };\n  /* The dragstart event is fired when the user starts dragging an element or text selection */\n\n  /* event.target is the source element : that is dragged */\n\n  /* Firefox requires calling dataTransfer.setData for the drag to properly work */\n\n\n  const handleDragStart = data => event => {\n    let fromCoursePlan = JSON.stringify({\n      id: data.id\n    });\n    event.dataTransfer.setData(\"dragContent\", fromCoursePlan);\n  };\n\n  const nullHandleDragStart = data => event => {};\n  /* The dragover event is fired when an element or text selection is being dragged */\n\n  /* over a valid drop target (every few hundred milliseconds) */\n\n  /* The event is fired on the drop target(s) */\n\n\n  const handleDragOver = data => event => {\n    event.preventDefault(); // Necessary. Allows us to drop.\n\n    return false;\n  };\n  /* Fired when an element or text selection is dropped on a valid drop target */\n\n  /* The event is fired on the drop target(s) */\n\n\n  const handleDrop = data => event => {\n    event.preventDefault();\n    if (event.dataTransfer.getData(\"dragContent\") === '') return false;\n    let fromCoursePlan = JSON.parse(event.dataTransfer.getData(\"dragContent\"));\n    let toCoursePlan = {\n      id: data.id\n    };\n    swapCoursePlan(fromCoursePlan, toCoursePlan);\n    return false;\n  };\n\n  const onSave = async () => {\n    let _coursePlans = coursePlans.slice();\n\n    _coursePlans.forEach((coursePlan, index) => {\n      coursePlan.id = null;\n      coursePlan.sequence = index + 1;\n    });\n\n    try {\n      let res = await axios.put('/admin/degreeplan', JSON.stringify(_coursePlans), config);\n      onToast('Successfully saved!', 'success');\n      setCoursePlans(res.data);\n    } catch (err) {\n      onToast('Server Error!', 'error');\n    }\n  };\n\n  const onSaveCoursePlan = () => {\n    if (isNull(coursePlan.type)) {\n      onToast('Select course type!', 'warn');\n      return;\n    }\n\n    let _coursePlans = coursePlans.slice();\n\n    _coursePlans = _coursePlans.map(cp => {\n      if (cp.id !== coursePlan.id) return cp;\n      let _course = null;\n      if (coursePlan.course != null) _course = restraints.filter(restraint => restraint.course.courseId == coursePlan.course.courseId)[0].course;\n      cp.type = coursePlan.type === \"\" ? \"Elective\" : coursePlan.type;\n      cp.course = _course;\n      return cp;\n    });\n    setCoursePlans(_coursePlans);\n    setModalShow(false);\n  };\n\n  const onEditCoursePlan = coursePlan => {\n    setCoursePlan(coursePlan);\n    setModalShow(true);\n  };\n\n  const onDeleteCoursePlan = coursePlan => {\n    let _coursePlans = coursePlans.slice();\n\n    _coursePlans = _coursePlans.map(cp => {\n      if (cp.id !== coursePlan.id) return cp;\n      cp.type = \"\";\n      cp.course = null;\n      return cp;\n    });\n    setCoursePlans(_coursePlans);\n  };\n\n  const onChangeCoursePlan = ({\n    target: {\n      value,\n      id\n    }\n  }) => {\n    if (id === 'type') {\n      setCoursePlan({ ...coursePlan,\n        [id]: value\n      });\n    } else if (id === 'courseId') {\n      setCoursePlan({ ...coursePlan,\n        course: {\n          courseId: value\n        }\n      });\n    }\n  };\n\n  const itemClassName = (idx, disabled) => {\n    let className = disabled ? 'disabled-course-item' : 'course-item';\n    if (idx % 8 === 3) className += ' course-item-left-sep';\n    if (idx % 8 === 4) className += ' course-item-right-sep';\n    return className;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      bg: \"dark\",\n      variant: \"dark\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(LinkContainer, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Navbar.Brand, {\n            className: \"pull-left\",\n            children: \"Program Advisory Tool\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Text, {\n          children: [\"Signed in as: \", /*#__PURE__*/_jsxDEV(\"a\", {\n            children: [user.firstName, \" \", user.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: signout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plan-board\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"bigHeader degree-title\",\n        children: [\" \", degreePlan.degree === undefined ? degreePlan.saveName : degreePlan.degree.name + ' / ' + degreePlan.degree.major, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SemesterPanel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-1\",\n          children: yearList.map(year => /*#__PURE__*/_jsxDEV(YearPanel, {\n            year: year\n          }, year, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-11\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row plan-panel\",\n            children: coursePlans.map((coursePlan, index) => coursePlan.disabled ? /*#__PURE__*/_jsxDEV(DisabledCoursePlanItem, {\n              item: coursePlan,\n              classname: itemClassName(index, true),\n              draggable: false\n            }, coursePlan.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(AdminCoursePlanItem, {\n              item: coursePlan,\n              classname: itemClassName(index, false),\n              draggable: coursePlan.type != \"\",\n              onDragStart: coursePlan.type != \"\" ? handleDragStart : nullHandleDragStart,\n              onDragOver: handleDragOver,\n              onDrop: handleDrop,\n              onEdit: onEditCoursePlan,\n              onDelete: onDeleteCoursePlan\n            }, coursePlan.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"justify-btn-group mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/dashboard\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"sm\",\n            variant: \"outline-danger\",\n            className: \"cancel-btn\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"sm\",\n          variant: \"outline-primary\",\n          className: \"save-btn\",\n          onClick: onSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      \"aria-labelledby\": \"coursePlan-edit-modal\",\n      centered: true,\n      show: modalShow,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"coursePlan-edit-modal\",\n          children: \"Select Course\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"type\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              \"aria-label\": \"Select level\",\n              onChange: onChangeCoursePlan,\n              value: coursePlan ? coursePlan.type : \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Core\",\n                children: \"Core\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Directed\",\n                children: \"Directed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Elective\",\n                children: \"Elective\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"courseId\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Course\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              \"aria-label\": \"Select level\",\n              onChange: onChangeCoursePlan,\n              value: coursePlan && coursePlan.course ? coursePlan.course.courseId : \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                placeholder: \"Select type\",\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 33\n              }, this), restraints.filter(restraint => {\n                if (coursePlan === null) return false;\n                if (coursePlan.type === null) return false;\n\n                if (coursePlan.type === \"Elective\") {\n                  if (restraint.type !== \"Core\" && restraint.type !== \"Directed\") return true;\n                  return false;\n                }\n\n                return restraint.type == coursePlan.type;\n              }).map(restraint => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: restraint.course.courseId,\n                children: [restraint.course.code, \" / \", restraint.course.name]\n              }, restraint.course.courseId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          onClick: onSaveCoursePlan,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => {\n            setModalShow(false);\n            setCoursePlan({});\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AdminDegreePlan, \"8LuGomwoTwwOP+cCOMBTJj/ybgE=\", false, function () {\n  return [useDispatch, useParams, useSelector];\n});\n\n_c = AdminDegreePlan;\nexport default AdminDegreePlan;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminDegreePlan\");","map":{"version":3,"sources":["C:/Users/itswa/Desktop/Complete/frontend/src/components/Admin/DegreePlan/AdminDegreePlan.js"],"names":["React","useEffect","useState","useDispatch","logout","Link","useSelector","Button","Container","Navbar","Row","Col","Modal","Form","LinkContainer","AdminCoursePlanItem","DisabledCoursePlanItem","axios","config","YearPanel","SemesterPanel","useParams","ToastContainer","toast","isNull","onToast","AdminDegreePlan","dispatch","signout","degreeId","user","state","auth","degreePlan","setDegreePlan","coursePlans","setCoursePlans","coursePlan","setCoursePlan","restraints","setRestraints","modalShow","setModalShow","yearList","setYearList","fetchDegreePlan","res","get","_coursePlans","data","sort","a","b","sequence","_yearList","i","length","push","swapCoursePlan","fromCoursePlan","toCoursePlan","items","slice","fromIndex","toIndex","id","buf","handleDragStart","event","JSON","stringify","dataTransfer","setData","nullHandleDragStart","handleDragOver","preventDefault","handleDrop","getData","parse","onSave","forEach","index","put","err","onSaveCoursePlan","type","map","cp","_course","course","filter","restraint","courseId","onEditCoursePlan","onDeleteCoursePlan","onChangeCoursePlan","target","value","itemClassName","idx","disabled","className","firstName","lastName","degree","undefined","saveName","name","major","year","code"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {logout} from '../../../store/actions/authActions';\r\nimport {Link} from 'react-router-dom';\r\nimport {useSelector} from 'react-redux';\r\nimport {Button, Container, Navbar, Row, Col, Modal, Form} from 'react-bootstrap';\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\nimport AdminCoursePlanItem from \"./AdminCoursePlanItem\";\r\nimport DisabledCoursePlanItem from \"./DisabledCoursePlanItem\";\r\nimport axios from \"axios\";\r\nimport {config} from \"../../../constants\";\r\nimport YearPanel from \"./YearPanel\";\r\nimport SemesterPanel from \"./SemesterPanel\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {isNull} from \"../../../utils/stringUtil\";\r\nimport {onToast} from \"../../../utils/toastUtil\"\r\n\r\nconst AdminDegreePlan = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const signout = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    let { degreeId } = useParams();\r\n\r\n    const {user} = useSelector((state) => state.auth);\r\n\r\n    const [degreePlan, setDegreePlan] = useState({})\r\n    const [coursePlans, setCoursePlans] = useState([])\r\n    const [coursePlan, setCoursePlan] = useState({})\r\n    const [restraints, setRestraints] = useState([])\r\n    const [modalShow, setModalShow] = useState(false)\r\n\r\n    const [yearList, setYearList] = useState([])\r\n\r\n    useEffect(() => {\r\n        // here goes the data fetching\r\n        const fetchDegreePlan = async () => {\r\n            let res = await axios.get('/admin/degreePlan/' + degreeId, config)\r\n            let _coursePlans = res.data.coursePlans.sort((a, b) => {\r\n                return a.sequence - b.sequence;\r\n            })\r\n            setDegreePlan(_coursePlans[0].degreePlan)\r\n            setCoursePlans(_coursePlans)\r\n            let _yearList = []\r\n            for(let i = 1; i <= _coursePlans.length / 8; i ++) _yearList.push(i);\r\n            setYearList(_yearList);\r\n\r\n            setRestraints(res.data.restraints);\r\n        }\r\n        fetchDegreePlan()\r\n    }, [])\r\n\r\n    const swapCoursePlan = (fromCoursePlan, toCoursePlan) => {\r\n        let items = coursePlans.slice();\r\n        let fromIndex = -1;\r\n        let toIndex = -1;\r\n\r\n        for (let i = 0; i < items.length; i++) {\r\n            if (items[i].id === fromCoursePlan.id) {\r\n                fromIndex = i;\r\n            }\r\n            if (items[i].id === toCoursePlan.id) {\r\n                toIndex = i;\r\n            }\r\n        }\r\n\r\n        if (fromIndex != -1 && toIndex != -1) {\r\n\r\n            let buf = items[fromIndex];\r\n            items[fromIndex] = items[toIndex];\r\n            items[toIndex] = buf;\r\n\r\n            setCoursePlans(items);\r\n\r\n        }\r\n    };\r\n\r\n    /* The dragstart event is fired when the user starts dragging an element or text selection */\r\n    /* event.target is the source element : that is dragged */\r\n    /* Firefox requires calling dataTransfer.setData for the drag to properly work */\r\n    const handleDragStart = data => event => {\r\n        let fromCoursePlan = JSON.stringify({id: data.id});\r\n        event.dataTransfer.setData(\"dragContent\", fromCoursePlan);\r\n    };\r\n\r\n    const nullHandleDragStart = data => event => {\r\n\r\n    };\r\n\r\n    /* The dragover event is fired when an element or text selection is being dragged */\r\n    /* over a valid drop target (every few hundred milliseconds) */\r\n    /* The event is fired on the drop target(s) */\r\n    const handleDragOver = data => event => {\r\n        event.preventDefault(); // Necessary. Allows us to drop.\r\n        return false;\r\n    };\r\n\r\n    /* Fired when an element or text selection is dropped on a valid drop target */\r\n    /* The event is fired on the drop target(s) */\r\n    const handleDrop = data => event => {\r\n        event.preventDefault();\r\n\r\n        if(event.dataTransfer.getData(\"dragContent\") === '') return false;\r\n        let fromCoursePlan = JSON.parse(event.dataTransfer.getData(\"dragContent\"));\r\n        let toCoursePlan = {id: data.id};\r\n\r\n        swapCoursePlan(fromCoursePlan, toCoursePlan);\r\n        return false;\r\n    };\r\n\r\n    const onSave = async () => {\r\n        let _coursePlans = coursePlans.slice();\r\n        _coursePlans.forEach((coursePlan, index) => {\r\n            coursePlan.id = null;\r\n            coursePlan.sequence = index + 1;\r\n        });\r\n\r\n        try {\r\n            let res = await axios.put('/admin/degreeplan', JSON.stringify(_coursePlans), config)\r\n            onToast('Successfully saved!', 'success');\r\n            setCoursePlans(res.data);\r\n        } catch (err) {\r\n            onToast('Server Error!', 'error');\r\n        }\r\n\r\n    }\r\n\r\n    const onSaveCoursePlan = () => {\r\n        if (isNull(coursePlan.type)) {\r\n            onToast('Select course type!', 'warn');\r\n            return;\r\n        }\r\n        let _coursePlans = coursePlans.slice()\r\n        _coursePlans = _coursePlans.map((cp) => {\r\n            if(cp.id !== coursePlan.id) return cp\r\n            let _course = null;\r\n            if(coursePlan.course != null) _course = restraints.filter((restraint) => (restraint.course.courseId == coursePlan.course.courseId))[0].course\r\n            cp.type = coursePlan.type === \"\" ? \"Elective\" : coursePlan.type;\r\n            cp.course = _course;\r\n            return cp;\r\n        })\r\n        setCoursePlans(_coursePlans);\r\n        setModalShow(false);\r\n    }\r\n\r\n    const onEditCoursePlan = (coursePlan) => {\r\n        setCoursePlan(coursePlan);\r\n        setModalShow(true);\r\n    }\r\n\r\n    const onDeleteCoursePlan = (coursePlan) => {\r\n        let _coursePlans = coursePlans.slice()\r\n        _coursePlans = _coursePlans.map((cp) => {\r\n            if(cp.id !== coursePlan.id) return cp\r\n            cp.type = \"\";\r\n            cp.course = null;\r\n            return cp;\r\n        })\r\n        setCoursePlans(_coursePlans);\r\n    }\r\n\r\n    const onChangeCoursePlan = ({target: {value, id}}) => {\r\n        if(id === 'type') {\r\n            setCoursePlan({\r\n                ...coursePlan,\r\n                [id]: value\r\n            })\r\n        } else if(id === 'courseId') {\r\n            setCoursePlan({\r\n                ...coursePlan,\r\n                course: {\r\n                    courseId: value\r\n                }\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const itemClassName = (idx, disabled) => {\r\n        let className = disabled ? 'disabled-course-item' : 'course-item';\r\n        if(idx % 8 === 3) className += ' course-item-left-sep';\r\n        if(idx % 8 === 4) className += ' course-item-right-sep';\r\n        return className;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Container>\r\n                    <LinkContainer to=\"/\">\r\n                        <Navbar.Brand className=\"pull-left\">Program Advisory Tool</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Text>\r\n                        Signed in as: <a>{user.firstName} {user.lastName}</a>\r\n                    </Navbar.Text>\r\n                    <Button onClick={signout}>Logout</Button>\r\n                </Container>\r\n            </Navbar>\r\n            <div className=\"plan-board\" >\r\n                {/*<h2 className=\"bigHeader pl-6\"> { degreePlan.savedName} </h2>*/}\r\n                <h2 className=\"bigHeader degree-title\"> { degreePlan.degree === undefined ? degreePlan.saveName : degreePlan.degree.name+' / '+degreePlan.degree.major } </h2>\r\n                <SemesterPanel />\r\n                <div className=\"row\">\r\n                    <div className=\"col-1\"\r\n                    >\r\n                        {\r\n                            yearList.map((year) => (\r\n                                <YearPanel year={year} key={year}/>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                    <div className=\"col-11\">\r\n                        <div className=\"row plan-panel\">\r\n                            {\r\n                                coursePlans.map((coursePlan, index) => (\r\n                                    coursePlan.disabled ?\r\n                                        <DisabledCoursePlanItem\r\n                                            item={coursePlan}\r\n                                            key={coursePlan.id}\r\n                                            classname={ itemClassName(index, true) }\r\n                                            draggable={ false }\r\n                                        /> :\r\n                                        <AdminCoursePlanItem\r\n                                            item={coursePlan}\r\n                                            key={coursePlan.id}\r\n                                            classname={ itemClassName(index, false) }\r\n                                            draggable={ coursePlan.type != \"\" }\r\n                                            onDragStart={ coursePlan.type != \"\" ? handleDragStart : nullHandleDragStart}\r\n                                            onDragOver={handleDragOver}\r\n                                            onDrop={handleDrop}\r\n                                            onEdit={onEditCoursePlan}\r\n                                            onDelete={onDeleteCoursePlan}\r\n                                        />\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"justify-btn-group mb-3\" >\r\n                    <Link to=\"/dashboard\">\r\n                        <Button size=\"sm\" variant=\"outline-danger\" className=\"cancel-btn\">\r\n                            Cancel\r\n                        </Button>\r\n                    </Link>\r\n                    <Button size=\"sm\" variant=\"outline-primary\" className=\"save-btn\" onClick={onSave}>\r\n                        Save\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            <ToastContainer />\r\n\r\n            <Modal\r\n                aria-labelledby=\"coursePlan-edit-modal\"\r\n                centered\r\n                show={modalShow}\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title id=\"coursePlan-edit-modal\">\r\n                        Select Course\r\n                    </Modal.Title>\r\n                    <ToastContainer />\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"type\">\r\n                            <Form.Label>Type</Form.Label>\r\n                            <Form.Select aria-label=\"Select level\"\r\n                                         onChange={onChangeCoursePlan}\r\n                                         value={ coursePlan ? coursePlan.type : \"\"}>\r\n                                <option value=\"\" disabled></option>\r\n                                <option value=\"Core\">Core</option>\r\n                                <option value=\"Directed\">Directed</option>\r\n                                <option value=\"Elective\">Elective</option>\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"courseId\">\r\n                            <Form.Label>Course</Form.Label>\r\n                            <Form.Select aria-label=\"Select level\"\r\n                                         onChange={onChangeCoursePlan}\r\n                                         value={ (coursePlan && coursePlan.course) ? coursePlan.course.courseId : \"\"}>\r\n                                <option value=\"\" placeholder=\"Select type\" disabled></option>\r\n                                {\r\n                                    restraints.filter( (restraint) => {\r\n                                        if(coursePlan === null) return false\r\n                                        if(coursePlan.type === null) return false\r\n                                        if(coursePlan.type === \"Elective\") {\r\n                                            if(restraint.type !== \"Core\" && restraint.type !== \"Directed\") return true;\r\n                                            return false;\r\n                                        }\r\n                                        return restraint.type == coursePlan.type\r\n                                    } ).map( (restraint) =>\r\n                                        <option key={restraint.course.courseId} value={restraint.course.courseId}>{restraint.course.code} / {restraint.course.name}</option>\r\n                                    )\r\n                                }\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" type=\"submit\" onClick={onSaveCoursePlan}>\r\n                        Save\r\n                    </Button>\r\n                    <Button variant=\"secondary\" onClick={() => {\r\n                        setModalShow(false)\r\n                        setCoursePlan({})\r\n                    }}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminDegreePlan;\r\n"]},"metadata":{},"sourceType":"module"}