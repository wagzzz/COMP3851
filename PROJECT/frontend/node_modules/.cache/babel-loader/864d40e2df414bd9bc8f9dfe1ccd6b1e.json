{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\itswa\\\\Desktop\\\\Complete\\\\frontend\\\\src\\\\components\\\\Admin\\\\Degree\\\\DegreeList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { FaPlus, FaPencilAlt, FaTrashAlt } from 'react-icons/fa';\nimport { Button, Card, ListGroup, Row, Col, ButtonGroup } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport { config } from \"../../../constants\";\nimport DegreeModal from \"./DegreeModal\";\nimport Dialog from 'react-bootstrap-dialog';\nimport { onToast } from \"../../../utils/toastUtil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DegreeList = props => {\n  _s();\n\n  /** Degree Board Start **/\n  const [degrees, setDegrees] = useState([]);\n  const [degreeModalShow, setDegreeModalShow] = useState(false);\n  const [degree, setDegree] = useState();\n  const [degreeDetail, setDegreeDetail] = useState([]);\n  let dialog = null;\n  useEffect(() => {\n    // here goes the data fetching\n    const fetchDegreeList = async () => {\n      let res = await axios.get('/admin/degrees', config);\n      setDegrees(await res.data);\n    };\n\n    fetchDegreeList();\n  }, []);\n\n  const onDegreeCreate = async () => {\n    setDegree(null);\n    let res = await axios.get('/admin/degree/0', config);\n\n    try {\n      setDegreeDetail(res.data);\n      setDegreeModalShow(true);\n    } catch (err) {\n      onToast('Server error!', 'error');\n    }\n  };\n\n  const onDegreeEdit = async degree => {\n    setDegree(degree);\n\n    try {\n      let res = await axios.get('/admin/degree/' + degree.degreeId, config);\n      setDegreeDetail(res.data);\n      setDegreeModalShow(true);\n    } catch (err) {\n      onToast('Server Error!', 'error');\n    }\n  };\n\n  const onDegreeDelete = degree => {\n    const deleteDegree = async () => {\n      try {\n        let res = await axios.delete('/admin/degree/' + degree.degreeId, config);\n        onToast('Successfully deleted!', 'success');\n        let _degrees = [];\n        degrees.forEach(dg => {\n          if (dg.degreeId !== degree.degreeId) _degrees.push(dg);\n        });\n        setDegrees(_degrees);\n      } catch (err) {\n        onToast('Server Error!', 'error');\n      }\n    };\n\n    dialog.show({\n      title: 'Delete degree',\n      body: 'Are you sure?',\n      actions: [Dialog.CancelAction(), Dialog.DefaultAction('Remove', () => {\n        deleteDegree();\n      }, 'btn-danger')],\n      bsSize: 'small',\n      onHide: dialog => {\n        dialog.hide();\n      }\n    });\n  };\n\n  const onCreateDegree = degree => {\n    let _degrees = degrees.slice();\n\n    _degrees.push(degree);\n\n    setDegrees(_degrees);\n  };\n\n  const onEditDegree = degree => {\n    let _degrees = degrees.slice();\n\n    _degrees = _degrees.map(dg => {\n      return dg.degreeId === degree.degreeId ? degree : dg;\n    });\n    setDegrees(_degrees);\n  };\n  /** Degree Board Start **/\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(Card.Title, {\n          as: \"h3\",\n          children: [\"List of Degrees\", /*#__PURE__*/_jsxDEV(Button, {\n            size: \"sm\",\n            variant: \"outline-success\",\n            className: \"float-end mt-1 pb-2\",\n            onClick: onDegreeCreate,\n            children: /*#__PURE__*/_jsxDEV(FaPlus, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: degrees.map(degree => {\n          return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              className: \"pl-3\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                md: 10,\n                lg: 9,\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: 'degree/' + degree.degreeId,\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: degree.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: [degree.major, \" / \", degree.faculty]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 2,\n                lg: 3,\n                className: \"text-right\",\n                style: {\n                  position: 'relative'\n                },\n                children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                  className: \"list-btn-group\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    className: \"list-edit-btn me-3\",\n                    variant: \"outline-primary\",\n                    size: \"sm\",\n                    onClick: () => onDegreeEdit(degree),\n                    children: /*#__PURE__*/_jsxDEV(FaPencilAlt, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 135,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"list-delete-btn\",\n                    variant: \"outline-danger\",\n                    size: \"sm\",\n                    onClick: () => onDegreeDelete(degree),\n                    children: /*#__PURE__*/_jsxDEV(FaTrashAlt, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this)\n          }, degree.degreeId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DegreeModal, {\n      show: degreeModalShow,\n      degreedetail: degreeDetail,\n      degree: degree,\n      onHide: () => setDegreeModalShow(false),\n      onCreateDegree: onCreateDegree,\n      onEditDegree: onEditDegree\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      ref: component => {\n        dialog = component;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DegreeList, \"2mU4SksCawK7U/T4hdKnTEQiuhs=\");\n\n_c = DegreeList;\nexport default DegreeList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DegreeList\");","map":{"version":3,"sources":["C:/Users/itswa/Desktop/Complete/frontend/src/components/Admin/Degree/DegreeList.js"],"names":["React","useState","useEffect","FaPlus","FaPencilAlt","FaTrashAlt","Button","Card","ListGroup","Row","Col","ButtonGroup","Link","axios","config","DegreeModal","Dialog","onToast","DegreeList","props","degrees","setDegrees","degreeModalShow","setDegreeModalShow","degree","setDegree","degreeDetail","setDegreeDetail","dialog","fetchDegreeList","res","get","data","onDegreeCreate","err","onDegreeEdit","degreeId","onDegreeDelete","deleteDegree","delete","_degrees","forEach","dg","push","show","title","body","actions","CancelAction","DefaultAction","bsSize","onHide","hide","onCreateDegree","slice","onEditDegree","map","name","major","faculty","position","component"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\r\nimport { FaPlus, FaPencilAlt, FaTrashAlt } from 'react-icons/fa'\r\nimport {Button, Card, ListGroup, Row, Col, ButtonGroup} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom';\r\nimport axios from \"axios\"\r\nimport {config} from \"../../../constants\"\r\nimport DegreeModal from \"./DegreeModal\"\r\nimport Dialog from 'react-bootstrap-dialog'\r\nimport {onToast} from \"../../../utils/toastUtil\";\r\n\r\nconst DegreeList = (props) => {\r\n\r\n    /** Degree Board Start **/\r\n\r\n    const [degrees, setDegrees] = useState([])\r\n    const [degreeModalShow, setDegreeModalShow] = useState(false)\r\n    const [degree, setDegree] = useState()\r\n\r\n    const [degreeDetail, setDegreeDetail] = useState([])\r\n\r\n    let dialog = null;\r\n\r\n    useEffect(() => {\r\n        // here goes the data fetching\r\n        const fetchDegreeList = async () => {\r\n            let res = await axios.get('/admin/degrees', config)\r\n            setDegrees(await res.data)\r\n        }\r\n        fetchDegreeList()\r\n    }, [])\r\n\r\n    const onDegreeCreate = async () => {\r\n        setDegree(null)\r\n        let res = await axios.get('/admin/degree/0', config)\r\n\r\n        try {\r\n            setDegreeDetail(res.data)\r\n            setDegreeModalShow(true)\r\n        } catch (err) {\r\n            onToast('Server error!', 'error')\r\n        }\r\n    }\r\n\r\n    const onDegreeEdit = async (degree) => {\r\n        setDegree(degree)\r\n        try {\r\n            let res = await axios.get('/admin/degree/' + degree.degreeId, config)\r\n            setDegreeDetail(res.data)\r\n            setDegreeModalShow(true)\r\n        } catch (err) {\r\n            onToast('Server Error!', 'error')\r\n        }\r\n    }\r\n\r\n    const onDegreeDelete = (degree) => {\r\n        const deleteDegree = async () => {\r\n            try {\r\n                let res = await axios.delete('/admin/degree/' + degree.degreeId, config)\r\n                onToast('Successfully deleted!', 'success')\r\n                let _degrees = []\r\n                degrees.forEach((dg) => {\r\n                    if(dg.degreeId !== degree.degreeId) _degrees.push(dg)\r\n                })\r\n                setDegrees(_degrees)\r\n            } catch (err) {\r\n                onToast('Server Error!', 'error')\r\n            }\r\n\r\n        }\r\n\r\n        dialog.show({\r\n            title: 'Delete degree',\r\n            body: 'Are you sure?',\r\n            actions: [\r\n                Dialog.CancelAction(),\r\n                Dialog.DefaultAction(\r\n                    'Remove',\r\n                    () => {\r\n                        deleteDegree()\r\n                    },\r\n                    'btn-danger'\r\n                )\r\n            ],\r\n            bsSize: 'small',\r\n            onHide: (dialog) => {\r\n                dialog.hide()\r\n            }\r\n        })\r\n    }\r\n\r\n    const onCreateDegree = (degree) => {\r\n        let _degrees = degrees.slice()\r\n        _degrees.push(degree)\r\n        setDegrees(_degrees)\r\n    }\r\n\r\n    const onEditDegree = (degree) => {\r\n        let _degrees = degrees.slice()\r\n        _degrees = _degrees.map((dg) => {\r\n            return (dg.degreeId === degree.degreeId) ? degree : dg\r\n        })\r\n        setDegrees(_degrees)\r\n    }\r\n    /** Degree Board Start **/\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Card.Header className=\"text-center\">\r\n                    <Card.Title as=\"h3\">\r\n                        List of Degrees\r\n                        <Button size=\"sm\" variant=\"outline-success\" className=\"float-end mt-1 pb-2\" onClick={onDegreeCreate}>\r\n                            <FaPlus/>\r\n                        </Button>\r\n                    </Card.Title>\r\n                </Card.Header>\r\n                <ListGroup>\r\n                    {degrees.map(degree => {\r\n                        return <ListGroup.Item key={degree.degreeId}>\r\n                            <Row className=\"pl-3\">\r\n                                <Col md={10} lg={9}>\r\n                                    <Link to={'degree/' + degree.degreeId}>\r\n                                        <h5>{degree.name}</h5>\r\n                                    </Link>\r\n                                    <h6>{degree.major} / {degree.faculty}</h6>\r\n                                </Col>\r\n                                <Col md={2} lg={3} className=\"text-right\" style={{position:'relative'}}>\r\n                                    <ButtonGroup className=\"list-btn-group\">\r\n                                        <Button\r\n                                            className=\"list-edit-btn me-3\"\r\n                                            variant=\"outline-primary\"\r\n                                            size=\"sm\"\r\n                                            onClick={() => onDegreeEdit(degree)}\r\n                                        >\r\n                                            <FaPencilAlt />\r\n                                        </Button>\r\n                                        <Button\r\n                                            className=\"list-delete-btn\"\r\n                                            variant=\"outline-danger\"\r\n                                            size=\"sm\"\r\n                                            onClick={() => onDegreeDelete(degree)}\r\n                                        >\r\n                                            <FaTrashAlt />\r\n                                        </Button>\r\n                                    </ButtonGroup>\r\n                                </Col>\r\n\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                    })}\r\n                </ListGroup>\r\n\r\n            </Card>\r\n            <DegreeModal\r\n                show={degreeModalShow}\r\n                degreedetail={degreeDetail}\r\n                degree={degree}\r\n                onHide={() => setDegreeModalShow(false)}\r\n                onCreateDegree={ onCreateDegree }\r\n                onEditDegree={ onEditDegree }\r\n            />\r\n            <Dialog ref={(component) => { dialog = component }} />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default DegreeList"]},"metadata":{},"sourceType":"module"}