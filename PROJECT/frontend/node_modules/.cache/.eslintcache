[{"C:\\Users\\itswa\\Desktop\\FINALPROJ\\COMP3851\\PROJECT\\frontend\\src\\index.js":"1","C:\\Users\\itswa\\Desktop\\FINALPROJ\\COMP3851\\PROJECT\\frontend\\src\\App.js":"2","C:\\Users\\itswa\\Desktop\\FINALPROJ\\COMP3851\\PROJECT\\frontend\\src\\store\\index.js":"3","C:\\Users\\itswa\\Desktop\\FINALPROJ\\COMP3851\\PROJECT\\frontend\\src\\store\\actions\\authActions.js":"4","C:\\Users\\itswa\\Desktop\\FINALPROJ\\COMP3851\\PROJECT\\frontend\\src\\routes\\Router.js":"5","C:\\Users\\itswa\\Desktop\\FINALPROJ\\COMP3851\\PROJECT\\frontend\\src\\store\\reducers\\rootReducer.js":"6","C:\\Users\\itswa\\Desktop\\FINALPROJ\\COMP3851\\PROJECT\\frontend\\src\\routes\\PublicRoute.js":"7","C:\\Users\\itswa\\Desktop\\FINALPROJ\\COMP3851\\PROJECT\\frontend\\src\\components\\Home.js":"8","C:\\Users\\itswa\\Desktop\\FINALPROJ\\COMP3851\\PROJECT\\frontend\\src\\components\\Login.js":"9","C:\\Users\\itswa\\Desktop\\FINALPROJ\\COMP3851\\PROJECT\\frontend\\src\\components\\Register.js":"10","C:\\Users\\itswa\\Desktop\\FINALPROJ\\COMP3851\\PROJECT\\frontend\\src\\store\\reducers\\authReducer.js":"11","C:\\Users\\itswa\\Desktop\\FINALPROJ\\COMP3851\\PROJECT\\frontend\\src\\routes\\PrivateRoute.js":"12","C:\\Users\\itswa\\Desktop\\FINALPROJ\\COMP3851\\PROJECT\\frontend\\src\\routes\\AdminRoute.js":"13","C:\\Users\\itswa\\Desktop\\FINALPROJ\\COMP3851\\PROJECT\\frontend\\src\\components\\UserDashboard.js":"14","C:\\Users\\itswa\\Desktop\\FINALPROJ\\COMP3851\\PROJECT\\frontend\\src\\components\\AdminDashboard.js":"15"},{"size":387,"mtime":1628796106000,"results":"16","hashOfConfig":"17"},{"size":355,"mtime":1628796112000,"results":"18","hashOfConfig":"17"},{"size":320,"mtime":1627520844000,"results":"19","hashOfConfig":"17"},{"size":275,"mtime":1627520844000,"results":"20","hashOfConfig":"17"},{"size":1041,"mtime":1630756877000,"results":"21","hashOfConfig":"17"},{"size":174,"mtime":1627520844000,"results":"22","hashOfConfig":"17"},{"size":542,"mtime":1630756668000,"results":"23","hashOfConfig":"17"},{"size":1628,"mtime":1628962458000,"results":"24","hashOfConfig":"17"},{"size":3205,"mtime":1630680682000,"results":"25","hashOfConfig":"17"},{"size":4061,"mtime":1628967590000,"results":"26","hashOfConfig":"17"},{"size":621,"mtime":1630680556000,"results":"27","hashOfConfig":"17"},{"size":545,"mtime":1630756588000,"results":"28","hashOfConfig":"17"},{"size":542,"mtime":1630756702000,"results":"29","hashOfConfig":"17"},{"size":1566,"mtime":1630681059000,"results":"30","hashOfConfig":"17"},{"size":1569,"mtime":1630681063000,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vpbh5z",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},"C:\\Users\\itswa\\Desktop\\FINALPROJ\\COMP3851\\PROJECT\\frontend\\src\\index.js",[],"C:\\Users\\itswa\\Desktop\\FINALPROJ\\COMP3851\\PROJECT\\frontend\\src\\App.js",[],"C:\\Users\\itswa\\Desktop\\FINALPROJ\\COMP3851\\PROJECT\\frontend\\src\\store\\index.js",[],"C:\\Users\\itswa\\Desktop\\FINALPROJ\\COMP3851\\PROJECT\\frontend\\src\\store\\actions\\authActions.js",[],"C:\\Users\\itswa\\Desktop\\FINALPROJ\\COMP3851\\PROJECT\\frontend\\src\\routes\\Router.js",[],"C:\\Users\\itswa\\Desktop\\FINALPROJ\\COMP3851\\PROJECT\\frontend\\src\\store\\reducers\\rootReducer.js",[],"C:\\Users\\itswa\\Desktop\\FINALPROJ\\COMP3851\\PROJECT\\frontend\\src\\routes\\PublicRoute.js",[],"C:\\Users\\itswa\\Desktop\\FINALPROJ\\COMP3851\\PROJECT\\frontend\\src\\components\\Home.js",["67"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Container, Navbar, Row, Col } from 'react-bootstrap';\nimport { LinkContainer} from \"react-router-bootstrap\";\n\n\nconst Home = () => {\n\n    return (\n        <div>\n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Container>\n                    <LinkContainer to=\"/\">\n                        <Navbar.Brand>University Of Newcastle - Program Advisory Tool</Navbar.Brand>\n                    </LinkContainer>\n                </Container>\n            </Navbar>\n\n            <Container>\n                <h1 className=\"bigHeader\">University of Newcastle's Program Advisory Tool Homepage</h1>\n\n                <h2 className=\"subHeaderHome\">Use the following options below to login or register:</h2>\n\n                <Row>\n                    <Col className=\"register\">\n                        <LinkContainer to=\"/login?type=admin\">\n                            <Button size=\"lg\">Login as admin</Button>\n                        </LinkContainer>\n                    </Col>\n                    <Col className=\"register\">\n                        <LinkContainer to=\"/login?type=user\">\n                            <Button size=\"lg\">Login as user</Button>\n                        </LinkContainer>\n                    </Col>\n                    <Col className=\"register\">\n                        <LinkContainer to=\"/register\">\n                            <Button size=\"lg\">Register</Button>\n                        </LinkContainer>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default Home","C:\\Users\\itswa\\Desktop\\FINALPROJ\\COMP3851\\PROJECT\\frontend\\src\\components\\Login.js",["68","69","70"],"import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../store/actions/authActions';\nimport axios from 'axios';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Button, Container, Navbar, Form } from 'react-bootstrap';\nimport { LinkContainer, Row, Column } from \"react-router-bootstrap\";\n\n\n\nlet config = { \n    headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json' \n    }\n}\n\nconst Login = () => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n\n    const location = useLocation();\n    const dispatch = useDispatch();\n\n    let loginType = location.search.replace(\"?type=\", \"\");\n\n    if(!loginType || ![\"admin\", \"user\"].includes(loginType))\n        loginType = \"user\"\n\n    const submitHandler = async (e) => {\n        e.preventDefault();\n        setError(\"\");\n        try{\n            const body = JSON.stringify({email, password})\n            let res = await axios.post('/api/login/' + loginType, body, config);\n            dispatch(login({...res.data, role: loginType}))\n        }catch(err){\n            let { status } = err.response;\n            if(status === 400)\n                return setError(\"Wrong credentials!\")\n\n            setError(\"Oops, try again!\")\n        }\n    }\n\n    return (\n        <div >\n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Container>\n                    <LinkContainer to=\"/\">\n                        <Navbar.Brand>University Of Newcastle - Program Advisory Tool</Navbar.Brand>\n                    </LinkContainer>\n                </Container>\n            </Navbar>\n\n\n            <Container>\n                <Form onSubmit={submitHandler}>\n                    <h1 className=\"bigHeader\">University of Newcastle's Program Advisory Tool Login</h1>\n\n                    <h2 className=\"subHeader\">Welcome back! Login to your {loginType} account!</h2>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={(e) => setEmail(e.currentTarget.value)} required/>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.currentTarget.value)} required/>\n                    </Form.Group>\n\n                    <p>You're {loginType === \"admin\" ? \"a user?\" : \"an admin?\"}\n\n                    <LinkContainer to={\"/login?type=\" + (loginType === \"admin\" ? \"user\" : \"admin\")}>\n                            <Button variant=\"link\">SIGN IN HERE</Button>\n                        </LinkContainer>\n\n                    </p>\n\n                    {error && <p>{error}</p>}\n\n                    <Button variant=\"primary\" type=\"submit\">\n                        Submit\n                    </Button>\n                </Form>\n            </Container>\n        </div>\n    )\n}\n\nexport default Login;\n","C:\\Users\\itswa\\Desktop\\FINALPROJ\\COMP3851\\PROJECT\\frontend\\src\\components\\Register.js",["71","72","73","74"],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Button, Container, Navbar, Row, Col, Form } from 'react-bootstrap';\nimport { LinkContainer} from \"react-router-bootstrap\";\n\n\nlet config = { \n    headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json' \n    }\n}\n\nconst Register = () => {\n\n    const initState = {\n        firstName: \"\",\n        email: \"\",\n        lastName: \"\",\n        password: \"\"\n    };\n\n    const [data, setData] = useState(initState);\n    const [checked, setChecked] = useState(false);\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState('');\n\n    const handleChange = (event) => {\n        event.persist()\n        setData(prevData => ({ ...prevData, [event.target.name]: event.target.value }))\n    }\n\n    const submitHandler = async (e) => {\n        e.preventDefault()\n        setError(\"\")\n        setSuccess(\"\")\n        try{\n            const body = JSON.stringify(data)\n            await axios.post('/api/register/' + (checked ? \"admin\" : \"user\"), body, config)\n\n            setSuccess(\"You have successfully registered!\")\n        }catch(err){\n            let { status } = err.response;\n            if(status === 400)\n                return setError(\"Email already registered!\")\n\n            setError(\"Oops, try again!\")\n        }\n    }\n\n    return (\n        <div>\n\n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Container>\n                    <LinkContainer to=\"/\">\n                        <Navbar.Brand>University Of Newcastle - Program Advisory Tool</Navbar.Brand>\n                    </LinkContainer>\n                </Container>\n            </Navbar>\n\n\n            <Container>\n                <h1 className=\"bigHeader\">University of Newcastle's Program Advisory Tool Registry Page</h1>\n\n                <h2 className=\"subHeaderHome\">Input your details to register an account:</h2>\n\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group className=\"mb-3\" controlId=\"firstName\">\n                        <Form.Label>First Name</Form.Label>\n                        <Form.Control type=\"text\" name=\"firstName\" placeholder=\"First name\" value={data.firstName} onChange={handleChange}  required/>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"lastName\">\n                        <Form.Label>Last Name</Form.Label>\n                        <Form.Control type=\"text\" name=\"lastName\" placeholder=\"Last name\" value={data.lastName} onChange={handleChange}  required />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Email Address\" name=\"email\" value={data.email} onChange={handleChange} required/>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" value={data.password} onChange={handleChange} required minLength={6} />\n                    </Form.Group>\n\n                    {error && <p> {error} </p>}\n\n                    {success && <p>{success}</p>}\n\n                    <Button variant=\"primary\" type=\"submit\">\n                        Register\n                    </Button>\n\n                    <p>Already have an account? Login as\n                    <LinkContainer to=\"/login?type=admin\">\n                            <Button variant=\"link\">Admin</Button>\n                        </LinkContainer>\n                    or\n                    <LinkContainer to=\"/login?type=user\">\n                            <Button variant=\"link\">User</Button>\n                        </LinkContainer>\n                    </p>\n                </Form>\n\n            </Container>\n        </div>\n    )\n}\n\nexport default Register;\n","C:\\Users\\itswa\\Desktop\\FINALPROJ\\COMP3851\\PROJECT\\frontend\\src\\store\\reducers\\authReducer.js",[],"C:\\Users\\itswa\\Desktop\\FINALPROJ\\COMP3851\\PROJECT\\frontend\\src\\routes\\PrivateRoute.js",[],"C:\\Users\\itswa\\Desktop\\FINALPROJ\\COMP3851\\PROJECT\\frontend\\src\\routes\\AdminRoute.js",[],"C:\\Users\\itswa\\Desktop\\FINALPROJ\\COMP3851\\PROJECT\\frontend\\src\\components\\UserDashboard.js",["75","76"],"import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logout } from '../store/actions/authActions';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { Button, Container, Navbar, Row, Col } from 'react-bootstrap';\nimport { LinkContainer} from \"react-router-bootstrap\";\n\n\nconst UserDashboard = () => {\n    const dispatch = useDispatch();\n\n    const signout = () => {\n        dispatch(logout())\n    }\n\n    const { user } = useSelector((state) => state.auth);\n\n\n    return (\n        <div>\n            \n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Container>\n                    <LinkContainer to=\"/\">\n                        <Navbar.Brand className=\"pull-left\">University Of Newcastle - Program Advisory Tool</Navbar.Brand>\n                    </LinkContainer>\n                    <Navbar.Text>\n                        Signed in as: <a>{user.firstName} {user.lastName}</a>\n                    </Navbar.Text>\n                    <Button onClick={signout}>Logout</Button>\n                </Container>\n            </Navbar>\n\n            <Container>\n                <h1 className=\"bigHeader\"> User Dashboard </h1>\n                <Row>\n                    <Col>\n                        <h3>Selecting new Degree Plan</h3>\n                    </Col>\n                    <Col>\n                        <h3>Loading saved Plans</h3>\n                    </Col>\n                </Row>\n            </Container>\n\n            \n\n        </div>\n        \n        \n    )\n}\n\nexport default UserDashboard;\n","C:\\Users\\itswa\\Desktop\\FINALPROJ\\COMP3851\\PROJECT\\frontend\\src\\components\\AdminDashboard.js",["77","78"],"import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logout } from '../store/actions/authActions';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { Button, Container, Navbar, Row, Col } from 'react-bootstrap';\nimport { LinkContainer} from \"react-router-bootstrap\";\n\n\nconst AdminDashboard = () => {\n    const dispatch = useDispatch();\n\n    const signout = () => {\n        dispatch(logout())\n    }\n\n    const { user } = useSelector((state) => state.auth);\n\n\n    return (\n        <div>\n            \n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Container>\n                    <LinkContainer to=\"/\">\n                        <Navbar.Brand className=\"pull-left\">University Of Newcastle - Program Advisory Tool</Navbar.Brand>\n                    </LinkContainer>\n                    <Navbar.Text>\n                        Signed in as: <a>{user.firstName} {user.lastName}</a>\n                    </Navbar.Text>\n                    <Button onClick={signout}>Logout</Button>\n                </Container>\n            </Navbar>\n\n            <Container>\n                <h1 className=\"bigHeader\"> Admin Dashboard </h1>\n                <Row>\n                    <Col>\n                        <h3>Selecting new Degree Plan</h3>\n                    </Col>\n                    <Col>\n                        <h3>Loading saved Plans</h3>\n                    </Col>\n                </Row>\n            </Container>\n\n            \n\n        </div>\n        \n        \n    )\n}\n\nexport default AdminDashboard;\n",{"ruleId":"79","severity":1,"message":"80","line":2,"column":10,"nodeType":"81","messageId":"82","endLine":2,"endColumn":14},{"ruleId":"79","severity":1,"message":"80","line":5,"column":10,"nodeType":"81","messageId":"82","endLine":5,"endColumn":14},{"ruleId":"79","severity":1,"message":"83","line":7,"column":25,"nodeType":"81","messageId":"82","endLine":7,"endColumn":28},{"ruleId":"79","severity":1,"message":"84","line":7,"column":30,"nodeType":"81","messageId":"82","endLine":7,"endColumn":36},{"ruleId":"79","severity":1,"message":"80","line":3,"column":10,"nodeType":"81","messageId":"82","endLine":3,"endColumn":14},{"ruleId":"79","severity":1,"message":"83","line":4,"column":37,"nodeType":"81","messageId":"82","endLine":4,"endColumn":40},{"ruleId":"79","severity":1,"message":"85","line":4,"column":42,"nodeType":"81","messageId":"82","endLine":4,"endColumn":45},{"ruleId":"79","severity":1,"message":"86","line":25,"column":21,"nodeType":"81","messageId":"82","endLine":25,"endColumn":31},{"ruleId":"79","severity":1,"message":"80","line":4,"column":10,"nodeType":"81","messageId":"82","endLine":4,"endColumn":14},{"ruleId":"87","severity":1,"message":"88","line":29,"column":39,"nodeType":"89","endLine":29,"endColumn":42},{"ruleId":"79","severity":1,"message":"80","line":4,"column":10,"nodeType":"81","messageId":"82","endLine":4,"endColumn":14},{"ruleId":"87","severity":1,"message":"88","line":29,"column":39,"nodeType":"89","endLine":29,"endColumn":42},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Column' is defined but never used.","'Col' is defined but never used.","'setChecked' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]